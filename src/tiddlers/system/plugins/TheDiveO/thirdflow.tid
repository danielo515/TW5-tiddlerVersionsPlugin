author: TheDiveO
created: 20140902114846490
description: Third Flow in-TW plugin development process support
list: readme license history
modified: 20141021183017561
plugin-type: plugin
source: http://thediveo.github.io/ThirdFlow
title: $:/plugins/TheDiveO/ThirdFlow
type: application/json
version: 1.0.7-master

{"tiddlers":{"$:/plugins/TheDiveO/ThirdFlow/codemirror/addon/selection/active-line.js":{"text":"/*\\\r\ncreated: 20141003161333154\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/codemirror/addon/selection/active-line.js\r\nmodified: 20141003161445164\r\ntype: application/javascript\r\nmodule-type: library\r\n\\*/\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n\r\n// Because sometimes you need to style the cursor's line.\r\n//\r\n// Adds an option 'styleActiveLine' which, when enabled, gives the\r\n// active line's wrapping <div> the CSS class \"CodeMirror-activeline\",\r\n// and gives its background <div> the class \"CodeMirror-activeline-background\".\r\n\r\n(function(mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\r\n    mod(require(\"$:/plugins/tiddlywiki/codemirror/lib/codemirror\"));\r\n  else if (typeof define == \"function\" && define.amd) // AMD\r\n    define([\"../../lib/codemirror\"], mod);\r\n  else // Plain browser env\r\n    mod(CodeMirror);\r\n})(function(CodeMirror) {\r\n  \"use strict\";\r\n  var WRAP_CLASS = \"CodeMirror-activeline\";\r\n  var BACK_CLASS = \"CodeMirror-activeline-background\";\r\n\r\n  CodeMirror.defineOption(\"styleActiveLine\", false, function(cm, val, old) {\r\n    var prev = old && old != CodeMirror.Init;\r\n    if (val && !prev) {\r\n      cm.state.activeLines = [];\r\n      updateActiveLines(cm, cm.listSelections());\r\n      cm.on(\"beforeSelectionChange\", selectionChange);\r\n    } else if (!val && prev) {\r\n      cm.off(\"beforeSelectionChange\", selectionChange);\r\n      clearActiveLines(cm);\r\n      delete cm.state.activeLines;\r\n    }\r\n  });\r\n\r\n  function clearActiveLines(cm) {\r\n    for (var i = 0; i < cm.state.activeLines.length; i++) {\r\n      cm.removeLineClass(cm.state.activeLines[i], \"wrap\", WRAP_CLASS);\r\n      cm.removeLineClass(cm.state.activeLines[i], \"background\", BACK_CLASS);\r\n    }\r\n  }\r\n\r\n  function sameArray(a, b) {\r\n    if (a.length != b.length) return false;\r\n    for (var i = 0; i < a.length; i++)\r\n      if (a[i] != b[i]) return false;\r\n    return true;\r\n  }\r\n\r\n  function updateActiveLines(cm, ranges) {\r\n    var active = [];\r\n    for (var i = 0; i < ranges.length; i++) {\r\n      var range = ranges[i];\r\n      if (!range.empty()) continue;\r\n      var line = cm.getLineHandleVisualStart(range.head.line);\r\n      if (active[active.length - 1] != line) active.push(line);\r\n    }\r\n    if (sameArray(cm.state.activeLines, active)) return;\r\n    cm.operation(function() {\r\n      clearActiveLines(cm);\r\n      for (var i = 0; i < active.length; i++) {\r\n        cm.addLineClass(active[i], \"wrap\", WRAP_CLASS);\r\n        cm.addLineClass(active[i], \"background\", BACK_CLASS);\r\n      }\r\n      cm.state.activeLines = active;\r\n    });\r\n  }\r\n\r\n  function selectionChange(cm, sel) {\r\n    updateActiveLines(cm, sel.ranges);\r\n  }\r\n});\r\n","created":"20141003161333154","title":"$:/plugins/TheDiveO/ThirdFlow/codemirror/addon/selection/active-line.js","modified":"20141003161445164","type":"application/javascript","module-type":"library"},"$:/plugins/TheDiveO/ThirdFlow/codemirror/mode/css/css.js":{"text":"/*\\\r\ncreated: 20141003162651180\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/codemirror/mode/css/css.js\r\nmodified: 20141003162818850\r\ntype: application/javascript\r\nmodule-type: library\r\n\\*/\r\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n\r\n(function(mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\r\n    mod(require(\"$:/plugins/tiddlywiki/codemirror/lib/codemirror\"));\r\n  else if (typeof define == \"function\" && define.amd) // AMD\r\n    define([\"../../lib/codemirror\"], mod);\r\n  else // Plain browser env\r\n    mod(CodeMirror);\r\n})(function(CodeMirror) {\r\n\"use strict\";\r\n\r\nCodeMirror.defineMode(\"css\", function(config, parserConfig) {\r\n  if (!parserConfig.propertyKeywords) parserConfig = CodeMirror.resolveMode(\"text/css\");\r\n\r\n  var indentUnit = config.indentUnit,\r\n      tokenHooks = parserConfig.tokenHooks,\r\n      mediaTypes = parserConfig.mediaTypes || {},\r\n      mediaFeatures = parserConfig.mediaFeatures || {},\r\n      propertyKeywords = parserConfig.propertyKeywords || {},\r\n      nonStandardPropertyKeywords = parserConfig.nonStandardPropertyKeywords || {},\r\n      colorKeywords = parserConfig.colorKeywords || {},\r\n      valueKeywords = parserConfig.valueKeywords || {},\r\n      fontProperties = parserConfig.fontProperties || {},\r\n      allowNested = parserConfig.allowNested;\r\n\r\n  var type, override;\r\n  function ret(style, tp) { type = tp; return style; }\r\n\r\n  // Tokenizers\r\n\r\n  function tokenBase(stream, state) {\r\n    var ch = stream.next();\r\n    if (tokenHooks[ch]) {\r\n      var result = tokenHooks[ch](stream, state);\r\n      if (result !== false) return result;\r\n    }\r\n    if (ch == \"@\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"def\", stream.current());\r\n    } else if (ch == \"=\" || (ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) {\r\n      return ret(null, \"compare\");\r\n    } else if (ch == \"\\\"\" || ch == \"'\") {\r\n      state.tokenize = tokenString(ch);\r\n      return state.tokenize(stream, state);\r\n    } else if (ch == \"#\") {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"atom\", \"hash\");\r\n    } else if (ch == \"!\") {\r\n      stream.match(/^\\s*\\w*/);\r\n      return ret(\"keyword\", \"important\");\r\n    } else if (/\\d/.test(ch) || ch == \".\" && stream.eat(/\\d/)) {\r\n      stream.eatWhile(/[\\w.%]/);\r\n      return ret(\"number\", \"unit\");\r\n    } else if (ch === \"-\") {\r\n      if (/[\\d.]/.test(stream.peek())) {\r\n        stream.eatWhile(/[\\w.%]/);\r\n        return ret(\"number\", \"unit\");\r\n      } else if (stream.match(/^\\w+-/)) {\r\n        return ret(\"meta\", \"meta\");\r\n      }\r\n    } else if (/[,+>*\\/]/.test(ch)) {\r\n      return ret(null, \"select-op\");\r\n    } else if (ch == \".\" && stream.match(/^-?[_a-z][_a-z0-9-]*/i)) {\r\n      return ret(\"qualifier\", \"qualifier\");\r\n    } else if (/[:;{}\\[\\]\\(\\)]/.test(ch)) {\r\n      return ret(null, ch);\r\n    } else if (ch == \"u\" && stream.match(\"rl(\")) {\r\n      stream.backUp(1);\r\n      state.tokenize = tokenParenthesized;\r\n      return ret(\"property\", \"word\");\r\n    } else if (/[\\w\\\\\\-]/.test(ch)) {\r\n      stream.eatWhile(/[\\w\\\\\\-]/);\r\n      return ret(\"property\", \"word\");\r\n    } else {\r\n      return ret(null, null);\r\n    }\r\n  }\r\n\r\n  function tokenString(quote) {\r\n    return function(stream, state) {\r\n      var escaped = false, ch;\r\n      while ((ch = stream.next()) != null) {\r\n        if (ch == quote && !escaped) {\r\n          if (quote == \")\") stream.backUp(1);\r\n          break;\r\n        }\r\n        escaped = !escaped && ch == \"\\\\\";\r\n      }\r\n      if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\r\n      return ret(\"string\", \"string\");\r\n    };\r\n  }\r\n\r\n  function tokenParenthesized(stream, state) {\r\n    stream.next(); // Must be '('\r\n    if (!stream.match(/\\s*[\\\"\\')]/, false))\r\n      state.tokenize = tokenString(\")\");\r\n    else\r\n      state.tokenize = null;\r\n    return ret(null, \"(\");\r\n  }\r\n\r\n  // Context management\r\n\r\n  function Context(type, indent, prev) {\r\n    this.type = type;\r\n    this.indent = indent;\r\n    this.prev = prev;\r\n  }\r\n\r\n  function pushContext(state, stream, type) {\r\n    state.context = new Context(type, stream.indentation() + indentUnit, state.context);\r\n    return type;\r\n  }\r\n\r\n  function popContext(state) {\r\n    state.context = state.context.prev;\r\n    return state.context.type;\r\n  }\r\n\r\n  function pass(type, stream, state) {\r\n    return states[state.context.type](type, stream, state);\r\n  }\r\n  function popAndPass(type, stream, state, n) {\r\n    for (var i = n || 1; i > 0; i--)\r\n      state.context = state.context.prev;\r\n    return pass(type, stream, state);\r\n  }\r\n\r\n  // Parser\r\n\r\n  function wordAsValue(stream) {\r\n    var word = stream.current().toLowerCase();\r\n    if (valueKeywords.hasOwnProperty(word))\r\n      override = \"atom\";\r\n    else if (colorKeywords.hasOwnProperty(word))\r\n      override = \"keyword\";\r\n    else\r\n      override = \"variable\";\r\n  }\r\n\r\n  var states = {};\r\n\r\n  states.top = function(type, stream, state) {\r\n    if (type == \"{\") {\r\n      return pushContext(state, stream, \"block\");\r\n    } else if (type == \"}\" && state.context.prev) {\r\n      return popContext(state);\r\n    } else if (type == \"@media\") {\r\n      return pushContext(state, stream, \"media\");\r\n    } else if (type == \"@font-face\") {\r\n      return \"font_face_before\";\r\n    } else if (/^@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\r\n      return \"keyframes\";\r\n    } else if (type && type.charAt(0) == \"@\") {\r\n      return pushContext(state, stream, \"at\");\r\n    } else if (type == \"hash\") {\r\n      override = \"builtin\";\r\n    } else if (type == \"word\") {\r\n      override = \"tag\";\r\n    } else if (type == \"variable-definition\") {\r\n      return \"maybeprop\";\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    } else if (type == \":\") {\r\n      return \"pseudo\";\r\n    } else if (allowNested && type == \"(\") {\r\n      return pushContext(state, stream, \"parens\");\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.block = function(type, stream, state) {\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (propertyKeywords.hasOwnProperty(word)) {\r\n        override = \"property\";\r\n        return \"maybeprop\";\r\n      } else if (nonStandardPropertyKeywords.hasOwnProperty(word)) {\r\n        override = \"string-2\";\r\n        return \"maybeprop\";\r\n      } else if (allowNested) {\r\n        override = stream.match(/^\\s*:/, false) ? \"property\" : \"tag\";\r\n        return \"block\";\r\n      } else {\r\n        override += \" error\";\r\n        return \"maybeprop\";\r\n      }\r\n    } else if (type == \"meta\") {\r\n      return \"block\";\r\n    } else if (!allowNested && (type == \"hash\" || type == \"qualifier\")) {\r\n      override = \"error\";\r\n      return \"block\";\r\n    } else {\r\n      return states.top(type, stream, state);\r\n    }\r\n  };\r\n\r\n  states.maybeprop = function(type, stream, state) {\r\n    if (type == \":\") return pushContext(state, stream, \"prop\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.prop = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" && allowNested) return pushContext(state, stream, \"propBlock\");\r\n    if (type == \"}\" || type == \"{\") return popAndPass(type, stream, state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n\r\n    if (type == \"hash\" && !/^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(stream.current())) {\r\n      override += \" error\";\r\n    } else if (type == \"word\") {\r\n      wordAsValue(stream);\r\n    } else if (type == \"interpolation\") {\r\n      return pushContext(state, stream, \"interpolation\");\r\n    }\r\n    return \"prop\";\r\n  };\r\n\r\n  states.propBlock = function(type, _stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"word\") { override = \"property\"; return \"maybeprop\"; }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.parens = function(type, stream, state) {\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n    if (type == \"word\") wordAsValue(stream);\r\n    return \"parens\";\r\n  };\r\n\r\n  states.pseudo = function(type, stream, state) {\r\n    if (type == \"word\") {\r\n      override = \"variable-3\";\r\n      return state.context.type;\r\n    }\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.media = function(type, stream, state) {\r\n    if (type == \"(\") return pushContext(state, stream, \"media_parens\");\r\n    if (type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \"{\") return popContext(state) && pushContext(state, stream, allowNested ? \"block\" : \"top\");\r\n\r\n    if (type == \"word\") {\r\n      var word = stream.current().toLowerCase();\r\n      if (word == \"only\" || word == \"not\" || word == \"and\")\r\n        override = \"keyword\";\r\n      else if (mediaTypes.hasOwnProperty(word))\r\n        override = \"attribute\";\r\n      else if (mediaFeatures.hasOwnProperty(word))\r\n        override = \"property\";\r\n      else\r\n        override = \"error\";\r\n    }\r\n    return state.context.type;\r\n  };\r\n\r\n  states.media_parens = function(type, stream, state) {\r\n    if (type == \")\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state, 2);\r\n    return states.media(type, stream, state);\r\n  };\r\n\r\n  states.font_face_before = function(type, stream, state) {\r\n    if (type == \"{\")\r\n      return pushContext(state, stream, \"font_face\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.font_face = function(type, stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"word\") {\r\n      if (!fontProperties.hasOwnProperty(stream.current().toLowerCase()))\r\n        override = \"error\";\r\n      else\r\n        override = \"property\";\r\n      return \"maybeprop\";\r\n    }\r\n    return \"font_face\";\r\n  };\r\n\r\n  states.keyframes = function(type, stream, state) {\r\n    if (type == \"word\") { override = \"variable\"; return \"keyframes\"; }\r\n    if (type == \"{\") return pushContext(state, stream, \"top\");\r\n    return pass(type, stream, state);\r\n  };\r\n\r\n  states.at = function(type, stream, state) {\r\n    if (type == \";\") return popContext(state);\r\n    if (type == \"{\" || type == \"}\") return popAndPass(type, stream, state);\r\n    if (type == \"word\") override = \"tag\";\r\n    else if (type == \"hash\") override = \"builtin\";\r\n    return \"at\";\r\n  };\r\n\r\n  states.interpolation = function(type, stream, state) {\r\n    if (type == \"}\") return popContext(state);\r\n    if (type == \"{\" || type == \";\") return popAndPass(type, stream, state);\r\n    if (type != \"variable\") override = \"error\";\r\n    return \"interpolation\";\r\n  };\r\n\r\n  return {\r\n    startState: function(base) {\r\n      return {tokenize: null,\r\n              state: \"top\",\r\n              context: new Context(\"top\", base || 0, null)};\r\n    },\r\n\r\n    token: function(stream, state) {\r\n      if (!state.tokenize && stream.eatSpace()) return null;\r\n      var style = (state.tokenize || tokenBase)(stream, state);\r\n      if (style && typeof style == \"object\") {\r\n        type = style[1];\r\n        style = style[0];\r\n      }\r\n      override = style;\r\n      state.state = states[state.state](type, stream, state);\r\n      return override;\r\n    },\r\n\r\n    indent: function(state, textAfter) {\r\n      var cx = state.context, ch = textAfter && textAfter.charAt(0);\r\n      var indent = cx.indent;\r\n      if (cx.type == \"prop\" && (ch == \"}\" || ch == \")\")) cx = cx.prev;\r\n      if (cx.prev &&\r\n          (ch == \"}\" && (cx.type == \"block\" || cx.type == \"top\" || cx.type == \"interpolation\" || cx.type == \"font_face\") ||\r\n           ch == \")\" && (cx.type == \"parens\" || cx.type == \"media_parens\") ||\r\n           ch == \"{\" && (cx.type == \"at\" || cx.type == \"media\"))) {\r\n        indent = cx.indent - indentUnit;\r\n        cx = cx.prev;\r\n      }\r\n      return indent;\r\n    },\r\n\r\n    electricChars: \"}\",\r\n    blockCommentStart: \"/*\",\r\n    blockCommentEnd: \"*/\",\r\n    fold: \"brace\"\r\n  };\r\n});\r\n\r\n  function keySet(array) {\r\n    var keys = {};\r\n    for (var i = 0; i < array.length; ++i) {\r\n      keys[array[i]] = true;\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  var mediaTypes_ = [\r\n    \"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\",\r\n    \"tty\", \"tv\", \"embossed\"\r\n  ], mediaTypes = keySet(mediaTypes_);\r\n\r\n  var mediaFeatures_ = [\r\n    \"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\",\r\n    \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\",\r\n    \"min-device-height\", \"max-device-height\", \"aspect-ratio\",\r\n    \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\",\r\n    \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\",\r\n    \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\",\r\n    \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\",\r\n    \"min-resolution\", \"max-resolution\", \"scan\", \"grid\"\r\n  ], mediaFeatures = keySet(mediaFeatures_);\r\n\r\n  var propertyKeywords_ = [\r\n    \"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\",\r\n    \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\",\r\n    \"animation-direction\", \"animation-duration\", \"animation-fill-mode\",\r\n    \"animation-iteration-count\", \"animation-name\", \"animation-play-state\",\r\n    \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\",\r\n    \"background\", \"background-attachment\", \"background-clip\", \"background-color\",\r\n    \"background-image\", \"background-origin\", \"background-position\",\r\n    \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\",\r\n    \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\",\r\n    \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\",\r\n    \"border-bottom-left-radius\", \"border-bottom-right-radius\",\r\n    \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\",\r\n    \"border-color\", \"border-image\", \"border-image-outset\",\r\n    \"border-image-repeat\", \"border-image-slice\", \"border-image-source\",\r\n    \"border-image-width\", \"border-left\", \"border-left-color\",\r\n    \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\",\r\n    \"border-right-color\", \"border-right-style\", \"border-right-width\",\r\n    \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\",\r\n    \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\",\r\n    \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\",\r\n    \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\",\r\n    \"caption-side\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\",\r\n    \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\",\r\n    \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\",\r\n    \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\",\r\n    \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\",\r\n    \"dominant-baseline\", \"drop-initial-after-adjust\",\r\n    \"drop-initial-after-align\", \"drop-initial-before-adjust\",\r\n    \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\",\r\n    \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\",\r\n    \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\",\r\n    \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\",\r\n    \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\",\r\n    \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\",\r\n    \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\",\r\n    \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\",\r\n    \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\",\r\n    \"grid-auto-position\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\",\r\n    \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-start\",\r\n    \"grid-template\", \"grid-template-areas\", \"grid-template-columns\",\r\n    \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\",\r\n    \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\",\r\n    \"inline-box-align\", \"justify-content\", \"left\", \"letter-spacing\",\r\n    \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\",\r\n    \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\",\r\n    \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\",\r\n    \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\",\r\n    \"marker-offset\", \"marks\", \"marquee-direction\", \"marquee-loop\",\r\n    \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\",\r\n    \"max-width\", \"min-height\", \"min-width\", \"move-to\", \"nav-down\", \"nav-index\",\r\n    \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\",\r\n    \"opacity\", \"order\", \"orphans\", \"outline\",\r\n    \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\",\r\n    \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\",\r\n    \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\",\r\n    \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\",\r\n    \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\",\r\n    \"perspective-origin\", \"pitch\", \"pitch-range\", \"play-during\", \"position\",\r\n    \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\",\r\n    \"region-break-before\", \"region-break-inside\", \"region-fragment\",\r\n    \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\",\r\n    \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\",\r\n    \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\",\r\n    \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\",\r\n    \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\",\r\n    \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\",\r\n    \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\",\r\n    \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\",\r\n    \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\",\r\n    \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\",\r\n    \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\",\r\n    \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\",\r\n    \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\",\r\n    \"transition\", \"transition-delay\", \"transition-duration\",\r\n    \"transition-property\", \"transition-timing-function\", \"unicode-bidi\",\r\n    \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\",\r\n    \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\",\r\n    \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"word-break\",\r\n    \"word-spacing\", \"word-wrap\", \"z-index\",\r\n    // SVG-specific\r\n    \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\",\r\n    \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\",\r\n    \"color-interpolation\", \"color-interpolation-filters\",\r\n    \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\",\r\n    \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\",\r\n    \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\",\r\n    \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\",\r\n    \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\",\r\n    \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\"\r\n  ], propertyKeywords = keySet(propertyKeywords_);\r\n\r\n  var nonStandardPropertyKeywords_ = [\r\n    \"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\",\r\n    \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\",\r\n    \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\",\r\n    \"searchfield-results-decoration\", \"zoom\"\r\n  ], nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_);\r\n\r\n  var colorKeywords_ = [\r\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\r\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\r\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\r\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\r\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\r\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\r\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\r\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\r\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\r\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\r\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\r\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\r\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\r\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\r\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\r\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\r\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\r\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\r\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\r\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\r\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\r\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\r\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\r\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\r\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\r\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\r\n  ], colorKeywords = keySet(colorKeywords_);\r\n\r\n  var valueKeywords_ = [\r\n    \"above\", \"absolute\", \"activeborder\", \"activecaption\", \"afar\",\r\n    \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alternate\",\r\n    \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\",\r\n    \"arabic-indic\", \"armenian\", \"asterisks\", \"auto\", \"avoid\", \"avoid-column\", \"avoid-page\",\r\n    \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\",\r\n    \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\r\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"button\", \"button-bevel\",\r\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"cambodian\",\r\n    \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\",\r\n    \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-earthly-branch\",\r\n    \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\",\r\n    \"col-resize\", \"collapse\", \"column\", \"compact\", \"condensed\", \"contain\", \"content\",\r\n    \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"cover\", \"crop\",\r\n    \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"dashed\", \"decimal\",\r\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"destination-atop\",\r\n    \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\",\r\n    \"disc\", \"discard\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\",\r\n    \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\",\r\n    \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\",\r\n    \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\",\r\n    \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\",\r\n    \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\",\r\n    \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\",\r\n    \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\",\r\n    \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\",\r\n    \"ethiopic-halehame-tig\", \"ew-resize\", \"expanded\", \"extra-condensed\",\r\n    \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"footnotes\",\r\n    \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"groove\",\r\n    \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hebrew\",\r\n    \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\",\r\n    \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"icon\", \"ignore\",\r\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\",\r\n    \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\",\r\n    \"inline-block\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\",\r\n    \"italic\", \"justify\", \"kannada\", \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\",\r\n    \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\",\r\n    \"line-through\", \"linear\", \"lines\", \"list-item\", \"listbox\", \"listitem\",\r\n    \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\",\r\n    \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\",\r\n    \"lower-roman\", \"lowercase\", \"ltr\", \"malayalam\", \"match\",\r\n    \"media-controls-background\", \"media-current-time-display\",\r\n    \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\",\r\n    \"media-return-to-realtime-button\", \"media-rewind-button\",\r\n    \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\",\r\n    \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\",\r\n    \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\",\r\n    \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\",\r\n    \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\r\n    \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"myanmar\", \"n-resize\",\r\n    \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\",\r\n    \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\",\r\n    \"ns-resize\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"open-quote\",\r\n    \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\",\r\n    \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\",\r\n    \"painted\", \"page\", \"paused\", \"persian\", \"plus-darker\", \"plus-lighter\", \"pointer\",\r\n    \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\",\r\n    \"radio\", \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\",\r\n    \"relative\", \"repeat\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\", \"rgb\", \"rgba\",\r\n    \"ridge\", \"right\", \"round\", \"row-resize\", \"rtl\", \"run-in\", \"running\",\r\n    \"s-resize\", \"sans-serif\", \"scroll\", \"scrollbar\", \"se-resize\", \"searchfield\",\r\n    \"searchfield-cancel-button\", \"searchfield-decoration\",\r\n    \"searchfield-results-button\", \"searchfield-results-decoration\",\r\n    \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\",\r\n    \"single\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\r\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\",\r\n    \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"solid\", \"somali\",\r\n    \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"square\",\r\n    \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\",\r\n    \"sub\", \"subpixel-antialiased\", \"super\", \"sw-resize\", \"table\",\r\n    \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\",\r\n    \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\",\r\n    \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\",\r\n    \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\",\r\n    \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\",\r\n    \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\",\r\n    \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"up\",\r\n    \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\",\r\n    \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\",\r\n    \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\",\r\n    \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\",\r\n    \"window\", \"windowframe\", \"windowtext\", \"x-large\", \"x-small\", \"xor\",\r\n    \"xx-large\", \"xx-small\"\r\n  ], valueKeywords = keySet(valueKeywords_);\r\n\r\n  var fontProperties_ = [\r\n    \"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\",\r\n    \"font-stretch\", \"font-weight\", \"font-style\"\r\n  ], fontProperties = keySet(fontProperties_);\r\n\r\n  var allWords = mediaTypes_.concat(mediaFeatures_).concat(propertyKeywords_)\r\n    .concat(nonStandardPropertyKeywords_).concat(colorKeywords_).concat(valueKeywords_);\r\n  CodeMirror.registerHelper(\"hintWords\", \"css\", allWords);\r\n\r\n  function tokenCComment(stream, state) {\r\n    var maybeEnd = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (maybeEnd && ch == \"/\") {\r\n        state.tokenize = null;\r\n        break;\r\n      }\r\n      maybeEnd = (ch == \"*\");\r\n    }\r\n    return [\"comment\", \"comment\"];\r\n  }\r\n\r\n  function tokenSGMLComment(stream, state) {\r\n    if (stream.skipTo(\"-->\")) {\r\n      stream.match(\"-->\");\r\n      state.tokenize = null;\r\n    } else {\r\n      stream.skipToEnd();\r\n    }\r\n    return [\"comment\", \"comment\"];\r\n  }\r\n\r\n  CodeMirror.defineMIME(\"text/css\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    tokenHooks: {\r\n      \"<\": function(stream, state) {\r\n        if (!stream.match(\"!--\")) return false;\r\n        state.tokenize = tokenSGMLComment;\r\n        return tokenSGMLComment(stream, state);\r\n      },\r\n      \"/\": function(stream, state) {\r\n        if (!stream.eat(\"*\")) return false;\r\n        state.tokenize = tokenCComment;\r\n        return tokenCComment(stream, state);\r\n      }\r\n    },\r\n    name: \"css\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-scss\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \":\": function(stream) {\r\n        if (stream.match(/\\s*\\{/))\r\n          return [null, \"{\"];\r\n        return false;\r\n      },\r\n      \"$\": function(stream) {\r\n        stream.match(/^[\\w-]+/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"#\": function(stream) {\r\n        if (!stream.eat(\"{\")) return false;\r\n        return [null, \"interpolation\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"scss\"\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-less\", {\r\n    mediaTypes: mediaTypes,\r\n    mediaFeatures: mediaFeatures,\r\n    propertyKeywords: propertyKeywords,\r\n    nonStandardPropertyKeywords: nonStandardPropertyKeywords,\r\n    colorKeywords: colorKeywords,\r\n    valueKeywords: valueKeywords,\r\n    fontProperties: fontProperties,\r\n    allowNested: true,\r\n    tokenHooks: {\r\n      \"/\": function(stream, state) {\r\n        if (stream.eat(\"/\")) {\r\n          stream.skipToEnd();\r\n          return [\"comment\", \"comment\"];\r\n        } else if (stream.eat(\"*\")) {\r\n          state.tokenize = tokenCComment;\r\n          return tokenCComment(stream, state);\r\n        } else {\r\n          return [\"operator\", \"operator\"];\r\n        }\r\n      },\r\n      \"@\": function(stream) {\r\n        if (stream.match(/^(charset|document|font-face|import|(-(moz|ms|o|webkit)-)?keyframes|media|namespace|page|supports)\\b/, false)) return false;\r\n        stream.eatWhile(/[\\w\\\\\\-]/);\r\n        if (stream.match(/^\\s*:/, false))\r\n          return [\"variable-2\", \"variable-definition\"];\r\n        return [\"variable-2\", \"variable\"];\r\n      },\r\n      \"&\": function() {\r\n        return [\"atom\", \"atom\"];\r\n      }\r\n    },\r\n    name: \"css\",\r\n    helperType: \"less\"\r\n  });\r\n\r\n});\r\n","created":"20141003162651180","title":"$:/plugins/TheDiveO/ThirdFlow/codemirror/mode/css/css.js","modified":"20141003162818850","type":"application/javascript","module-type":"library"},"$:/plugins/TheDiveO/ThirdFlow/commands/packplugin.js":{"text":"/*\\\r\ncreated: 20140927171850335\r\nmodified: 20141003155657361\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/commands/packplugin.js\r\ntype: application/javascript\r\nmodule-type: command\r\n\r\nThe packplugin command packages source tiddlers (ordinary\r\ntiddlers) into a plugin tiddler:\r\n--packplugin <plugin title>\r\n\r\nPlease note that the plugin tiddler must be correctly set\r\nup in that it is of type \"application/json\" and also\r\nthe plugin-type is set.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nexports.info = {\r\n\tname: \"packplugin\",\r\n\tsynchronous: true\r\n};\r\n\r\nvar Command = function(params,commander) {\r\n\tthis.params = params;\r\n\tthis.commander = commander;\r\n\tthis.logger = new $tw.utils.Logger(\"--\" + exports.info.name);\r\n};\r\n\r\nCommand.prototype.execute = function() {\r\n\tif(this.params.length < 1) {\r\n\t\treturn \"Missing plugin title\";\r\n\t}\r\n\tvar wiki = this.commander.wiki,\r\n\t\tself = this,\r\n\t\tfs = require(\"fs\"),\r\n\t\tpath = require(\"path\"),\r\n\t\tpluginTitle = this.params[0],\r\n\t\tfilter = this.params[1] ||\r\n\t\t\t\"[prefix[\"+this.params[0]+\"/]]\";\r\n\r\n\t// Get the plug-in self-description tiddler. If it doesn't exist,\r\n\t// bail out as the plugin developer needs to provide a plugin tiddler\r\n\t// with the required self-description.\r\n\tthis.logger.log(\"making plugin\", pluginTitle);\r\n\tthis.logger.log(\"using filter for packing\", filter);\r\n\tvar pluginTiddler = $tw.wiki.getTiddler(pluginTitle);\r\n\tif (!pluginTiddler) {\r\n\t\treturn \"missing plugin tiddler: \" + pluginTitle;\r\n\t}\r\n\t// Sanity checks first...\r\n\tif(pluginTiddler.fields.type !== \"application/json\" || !pluginTiddler.hasField(\"plugin-type\")) {\r\n\t\treturn \"not a plugin skeleton: \" + pluginTitle;\r\n\t}\r\n\t// Update the plugin content to contain all the tiddlers that match\r\n\t// the filter expression.\r\n\tvar tiddlers = $tw.wiki.filterTiddlers(filter),\r\n\t    pluginTiddlers = {};\r\n\t$tw.utils.each(tiddlers, function(title) {\r\n\t\tvar tiddler = $tw.wiki.getTiddler(title),\r\n\t\t    fields = {};\r\n\t\tself.logger.log(\"adding \" + title);\r\n\t\t$tw.utils.each(tiddler.fields, function(value, name) {\r\n\t\t\tfields[name] = tiddler.getFieldString(name);\r\n\t\t});\r\n\t\tpluginTiddlers[title] = fields;\r\n\t});\r\n\tthis.logger.log(\"packed\", tiddlers.length, \"tiddlers\");\r\n\tvar plugin = new $tw.Tiddler(pluginTiddler, { text: JSON.stringify({tiddlers: pluginTiddlers}) });\r\n\t$tw.wiki.addTiddler(plugin);\r\n\t// We need to update the plugin info that TW had built up during boot...\r\n\t$tw.wiki.readPluginInfo();\r\n\t// ...and we need to re-unpack the plugins into their shadow tiddlers in\r\n\t// order to make [is[shadow]] work correctly.\r\n\t$tw.wiki.unpackPluginTiddlers();\r\n\t\r\n\treturn null; // done & okay\r\n};\r\n\r\nexports.Command = Command;\r\n\r\n})();\r\n","created":"20140927171850335","modified":"20141003155657361","title":"$:/plugins/TheDiveO/ThirdFlow/commands/packplugin.js","type":"application/javascript","module-type":"command"},"$:/plugins/TheDiveO/ThirdFlow/commands/rendertemplatedtiddler.js":{"text":"/*\\\r\ncreated: 20140927173011680\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/commands/rendertemplatedtiddler.js\r\ntype: application/javascript\r\nmodified: 20140927173032181\r\nmodule-type: command\r\n\r\nCommand to render a single tiddler using a template.\r\n--rendertemplatedtiddler <title> <template> <file>\r\n\r\nCommand to render a single tiddler using a template to a specific file.\r\nIn comparism to --rendertiddler this command variant accepts a template\r\nbut only works on a single tiddler. This allows us to avoid having specific\r\ntemplate tiddlers including the filter set.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar widget = require(\"$:/core/modules/widgets/widget.js\");\r\n\r\nexports.info = {\r\n\tname: \"rendertemplatedtiddler\",\r\n\tsynchronous: true\r\n};\r\n\r\nvar Command = function(params,commander) {\r\n\tthis.params = params;\r\n\tthis.commander = commander;\r\n    this.logger = new $tw.utils.Logger(\"--\" + exports.info.name);\r\n};\r\n\r\nCommand.prototype.execute = function() {\r\n\tif(this.params.length < 3) {\r\n\t\treturn \"Missing template or filename\";\r\n\t}\r\n\tvar self = this,\r\n\t\tfs = require(\"fs\"),\r\n\t\tpath = require(\"path\"),\r\n\t\twiki = this.commander.wiki,\r\n\t\ttitle = this.params[0],\r\n\t\ttemplate = this.params[1],\r\n\t\tfilename = path.resolve(this.commander.outputPath,this.params[2]);\r\n\t$tw.utils.createFileDirectories(filename);\r\n\t// Save the tiddler as a self contained templated file\r\n\tvar content = wiki.renderTiddler(\"text/plain\",template,{variables: {currentTiddler: title}});\r\n\tfs.writeFileSync(filename,content,{encoding: \"utf8\"});\r\n    this.logger.log(\"rendered tiddler\", title, \"to\", filename);\r\n\r\n\treturn null; // done fine\r\n};\r\n\r\nexports.Command = Command;\r\n\r\n})();","created":"20140927173011680","title":"$:/plugins/TheDiveO/ThirdFlow/commands/rendertemplatedtiddler.js","type":"application/javascript","modified":"20140927173032181","module-type":"command"},"$:/plugins/TheDiveO/ThirdFlow/filters/addprefix.js":{"text":"/*\\\ncreated: 20141020111648006\ntitle: $:/plugins/TheDiveO/ThirdFlow/filters/addprefix.js\ntype: application/javascript\nmodified: 20141020111656991\nmodule-type: filteroperator\n\nFilter operator for adding a prefix to each title in the list. This is\nespecially useful in contexts where only a filter expression is allowed\nand macro substitution isn't available.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports.addprefix = function(source,operator,options) {\n\tvar results = [];\n\tsource(function(tiddler,title) {\n\t\tresults.push(operator.operand + title);\n\t});\n\treturn results;\n};\n\n})();\n","created":"20141020111648006","title":"$:/plugins/TheDiveO/ThirdFlow/filters/addprefix.js","type":"application/javascript","modified":"20141020111656991","module-type":"filteroperator"},"$:/plugins/TheDiveO/ThirdFlow/filters/addsuffix.js":{"text":"/*\\\ncreated: 20141020111710426\ntitle: $:/plugins/TheDiveO/ThirdFlow/filters/addsuffix.js\ntype: application/javascript\nmodified: 20141020111717792\nmodule-type: filteroperator\n\nFilter operator for adding a suffix to each title in the list. This is\nespecially useful in contexts where only a filter expression is allowed\nand macro substitution isn't available.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nExport our filter function\n*/\nexports.addsuffix = function(source,operator,options) {\n\tvar results = [];\n\tsource(function(tiddler,title) {\n\t\tresults.push(title + operator.operand);\n\t});\n\treturn results;\n};\n\n})();\n","created":"20141020111710426","title":"$:/plugins/TheDiveO/ThirdFlow/filters/addsuffix.js","type":"application/javascript","modified":"20141020111717792","module-type":"filteroperator"},"$:/plugins/TheDiveO/ThirdFlow/filters/is/shadowinsync.js":{"text":"/*\\\r\ncreated: 20140927173349128\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/filters/is/shadowinsync.js\r\ntype: application/javascript\r\nmodified: 20140927173409192\r\nmodule-type: isfilteroperator\r\n\r\nFilter function for [is[shadowinsync]]\r\n  a tiddler is shadowsynced when an ordinary tiddler also has\r\n  a shadow tiddler *AND* the shadow tiddler is the same as the\r\n  real tiddler. This is decided on the basis of type, and the\r\n  creation and modification dates.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\n/*\r\nExport our filter function\r\n*/\r\nexports.shadowinsync = function(source,prefix,options) {\r\n\tvar results = [];\r\n\tvar invert = prefix === \"!\";\r\n\tsource(function(tiddler,title) {\r\n\t\tvar match = invert;\r\n\t\tvar pluginTitle = options.wiki.getShadowSource(title);\r\n\t\tif(pluginTitle) {\r\n\t\t\tvar pluginInfo = options.wiki.getPluginInfo(pluginTitle),\r\n\t\t\t\tshadow = pluginInfo.tiddlers[title];\r\n\t\t\tif ( (tiddler.fields.type == shadow.type)\r\n\t\t\t     && (tiddler.getFieldString(\"created\") === shadow.created)\r\n\t\t\t\t && (tiddler.getFieldString(\"modified\") === shadow.modified) ) {\r\n\t\t\t\tmatch = !match;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ( match ) {\r\n\t\t\tresults.push(title);\r\n\t\t}\r\n\t});\r\n\treturn results;\r\n};\r\n\r\n})();\r\n","created":"20140927173349128","title":"$:/plugins/TheDiveO/ThirdFlow/filters/is/shadowinsync.js","type":"application/javascript","modified":"20140927173409192","module-type":"isfilteroperator"},"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/autosubfolders.js":{"text":"/*\\\r\ncreated: 20141012162041927\r\nmodified: 20141012163305588\r\nmodule-type: folderpolicy\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/folderpolicies/autosubfolders.js\r\ntype: application/javascript\r\npriority: 0\r\n\r\nThis folder usher places draft tiddlers flat into their own separate drafts folder.\r\nThe exact name of the drafts folder is configurable.\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar configTiddler = \"$:/config/FileStorage/enableautomaticsubfolders\";\r\nvar automaticSubfoldersEnabled;\r\n\r\n// The configuration tiddler to monitor for changes\r\nexports.watch = \"[field:title[\" + configTiddler + \"]]\";\r\n\r\n// We get notified when our configuration tiddler was changed. Please\r\n// note that title is undefined during inital configuration call.\r\nexports.reconfig = function() {\r\n\tautomaticSubfoldersEnabled = $tw.wiki.getTiddlerText(configTiddler, \"yes\") === \"yes\";\r\n\tthis.logger.log(\"folder policy config: default: hierarchical subfolders are \" + (automaticSubfoldersEnabled ? \"enabled\" : \"disabled\"));\r\n};\r\n\r\nexports.folderpolicy = function(title, options) {\r\n\tif(!options.draft && automaticSubfoldersEnabled) {\r\n\t\toptions.subfolder = this.subfoldersFromTitle(title);\r\n\t\toptions.name = this.leafFromTitle(title);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n})();\r\n","created":"20141012162041927","modified":"20141012163305588","module-type":"folderpolicy","title":"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/autosubfolders.js","type":"application/javascript","priority":"0"},"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/draft.js":{"text":"/*\\\r\ncreated: 20141012162041927\r\nmodified: 20141012163305588\r\nmodule-type: folderpolicy\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/folderpolicies/draft.js\r\ntype: application/javascript\r\npriority: 200\r\n\r\nThis folder usher places draft tiddlers flat into their own separate drafts folder.\r\nThe exact name of the drafts folder is configurable.\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar configTiddler = \"$:/config/FileStorage/draftfoldername\";\r\nvar draftFolderName;\r\n\r\n// The configuration tiddler to monitor for changes\r\nexports.watch = \"[field:title[\" + configTiddler + \"]]\";\r\n\r\n// We get notified when our configuration tiddler was changed. Please\r\n// note that title is undefined during inital configuration call.\r\nexports.reconfig = function() {\r\n\tdraftFolderName = $tw.wiki.getTiddlerText(configTiddler, \"drafts\").replace(new RegExp(\"\\r?\\n\", \"mg\"), \"\");\r\n\tthis.logger.log(\"folder policy config: draft: draft subfolder is: \" + draftFolderName);\r\n};\r\n\r\nexports.folderpolicy = function(title, options) {\r\n\tif(options.draft) {\r\n\t\toptions.subfolder = draftFolderName;\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n};\r\n\r\n})();\r\n","created":"20141012162041927","modified":"20141012163305588","module-type":"folderpolicy","title":"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/draft.js","type":"application/javascript","priority":"200"},"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/system.js":{"text":"/*\\\r\ncreated: 20141012162151347\r\nmodified: 20141012163255922\r\nmodule-type: folderpolicy\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/folderpolicies/system.js\r\ntype: application/javascript\r\npriority: 100\r\n\r\nThis folder usher handles system tiddlers and places them into their\r\nown separate system folder and then into hierarchical subfolders according\r\nto their title. The exact name of the system folder is configurable.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar configTiddler = \"$:/config/FileStorage/systemfoldername\";\r\nvar systemFolderName;\r\n\r\n// The configuration tiddler to monitor for changes\r\nexports.watch = \"[field:title[\" + configTiddler + \"]]\";\r\n\r\n// We get notified when our configuration tiddler was changed. Please\r\n// note that title is undefined during inital configuration call.\r\nexports.reconfig = function() {\r\n\tsystemFolderName = $tw.wiki.getTiddlerText(configTiddler, \"system\").replace(new RegExp(\"\\r?\\n\", \"mg\"), \"\");\r\n\tthis.logger.log(\"folder policy config: system: system subfolder is: \" + systemFolderName);\r\n};\r\n\r\nexports.folderpolicy = function(title, options) {\r\n\tif( !options.draft && title.substr(0, 3) === \"$:/\") {\r\n\t\tvar posTitle = title.lastIndexOf(\"/\");\r\n\t\toptions.subfolder = systemFolderName + title.substr(2, posTitle - 2);\r\n\t\toptions.name = title.substr(posTitle + 1);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n};\r\n\t\r\n})();\r\n","created":"20141012162151347","modified":"20141012163255922","module-type":"folderpolicy","title":"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/system.js","type":"application/javascript","priority":"100"},"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/tag.js":{"text":"/*\\\r\ncreated: 20141012162151347\r\nmodified: 20141012163255922\r\nmodule-type: folderpolicy\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/folderpolicies/tag.js\r\ntype: application/javascript\r\npriority: 50\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar configTiddlerBase = \"$:/config/FileStorage/tagfolders\";\r\nvar tagFolders;\r\nvar tagList;\r\n\r\n// The configuration tiddlers to monitor for changes\r\nexports.watch = \"[field:title[\" + configTiddlerBase + \"]] [prefix[\" + configTiddlerBase + \"/]]\";\r\n\r\n// We get notified when our configuration tiddler was changed. Please\r\n// note that title is undefined during inital configuration call.\r\nexports.reconfig = function() {\r\n\tvar self = this;\r\n    \r\n    var cfgTiddler = $tw.wiki.getTiddler(configTiddlerBase);\r\n    tagList = $tw.utils.parseStringArray((cfgTiddler && cfgTiddler.fields.list) || \"\");\r\n    var cfgTags = $tw.wiki.filterTiddlers(\"[prefix[\" + configTiddlerBase + \"/]]\");\r\n    tagFolders = {};\r\n    \r\n    $tw.utils.each(tagList, function(tag) {\r\n        tagFolders[tag] = {folderName: \"\", folderMode: \"flat\"};\r\n    });\r\n    $tw.utils.each(cfgTags, function(tagCfg) {\r\n        var tiddler = $tw.wiki.getTiddler(tagCfg);\r\n        var tag = tiddler.fields[\"tag-name\"];\r\n        var folderName = tiddler.fields[\"folder-name\"] || \"\";\r\n        var folderMode = tiddler.fields[\"folder-mode\"] || \"flat\";\r\n        self.logger.log(\"folder policy config: tag: for:\", \"\\\"\" + tag + \"\\\"\", \"folder:\", \"\\\"\" + folderName + \"\\\"\", \"mode:\", folderMode);\r\n        if(tag && tagFolders[tag]) {\r\n            tagFolders[tag].folderName = folderName;\r\n            tagFolders[tag].folderMode = folderMode;\r\n        }\r\n    });\r\n};\r\n\r\n// We are asked to apply our folder policy...\r\nexports.folderpolicy = function(title, options) {\r\n\tif( !options.draft ) {\r\n\t\tvar tags = options.tiddler.fields.tags;\r\n\t\tif ($tw.utils.isArray(tags)) {\r\n\t\t\tthis.logger.log(\"Tags: \"+tags.toString());\r\n            for (var t=0; t<tagList.length; ++t) {\r\n                if (tags.indexOf(tagList[t]) >= 0) {\r\n                    var info = tagFolders[tagList[t]];\r\n                    var subfolder = info.folderName;\r\n                    if(info.folderMode !== \"flat\") {\r\n                        options.subfolder = subfolder + \"/\" + this.subfoldersFromTitle(title);\r\n                        options.name = this.leafFromTitle(title);\r\n                    } else {\r\n                        options.subfolder = subfolder;\r\n                        options.title = title;\r\n                    }\r\n                    return true;\r\n                }\r\n            }\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\t\r\n})();\r\n","created":"20141012162151347","modified":"20141012163255922","module-type":"folderpolicy","title":"$:/plugins/TheDiveO/ThirdFlow/folderpolicies/tag.js","type":"application/javascript","priority":"50"},"$:/plugins/TheDiveO/ThirdFlow/history":{"created":"20140902083720188","modified":"20141021174538888","title":"$:/plugins/TheDiveO/ThirdFlow/history","type":"text/vnd.tiddlywiki","text":"* ''1.0.7'' -- minor fix release and core upgrade.\n** fixed the add tag button not working.\n** upgraded the release demo wiki core to 5.1.3.\n* ''1.0.6'' -- improved tag-based folders release.\n** the tags configured for organizing tiddler storage into folders now have a well-defined natural order. Tags earlier in the tag list take precedence over later ones. The new UI makes setting precedence easy, please see the next item.\n** revamped UI for configuring tag-based folders. The new UI allows tags to be sorted earlier in the list so that those earlier tags take precedence over latter tags.\n* ''1.0.5'' -- lots of new stuff release.\n** a new \"Plugin Sources\" UI in the sidebar under the \"More\" tab. Lists only plugins and their original source code tiddlers.\n** an enhanced file system sync adaptor that is now configurable through its own control panel UI extension, under the new tab [[File Storage|$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage]].\n*** configure the folder names for system tiddlers and drafts.\n*** organize your tiddlers neatly into their own subfolders based on tags. Unfortunately, tag priority cannot be controlled at this time.\n** more editing and highlight support.\n*** towards a (mostly) unified syntax highlighting in both static rendering as well as when editing tiddlers.\n*** added more codemirror features: current line highlighting, CSS syntax support.\n*** added support for TW5's native ~JavaScript storage format when creating ~JavaScript tiddlers directly inside ~TiddlyWiki 5. Tiddler meta-data gets correctly inserted into a (special) comment section.\n* ''1.0.4'' -- fix and more documentation.\n** fixed a typo in the (empty) source plugin tiddler itself which caused hiccups in ~TiddlyWiki's control panel plugin tab.\n** added more background information about plugins, modules, and the crazy stuff the //Third Flow// plugin is made of. \n* ''1.0.3'' -- upgraded to work with the final ~TiddlyWiki 5.1.x releases.\n** fixed using deprecated regular expression when packing plugin tiddlers.\n* ''1.0.2'' -- fix and polishing release.\n** fixes a problem in the hierarchical filesystem sync adaptor that previously caused server aborts when adding JPEG tiddlers. The sync adaptor now defaults to the \"~~binary~~base64\" encoding whenever a meta file is required.\n** added two illustrations to the demo documentation showing the develop and release phases.\n** further minor documentation fixes and improvements.\n* ''1.0.1'' -- fix and polishing release.\n** fixes an issue where the user plugin demonstration wikis contained still the plugin source in addition to the plugin itself.\n** included polishing documentation from pmario (thanks!).\n* ''1.0.0'' -- this marks the first public release of the //Third Flow// plugin. Of course, the //Third Flow// eats its own dog food: this plugin has been developed with itself. Sweet, isn't it?\n** the ``--makeplugin`` command for creating plugins in headless TW5 instances running under Node.js.\n** the ``hierarchicalfilesystemadaptor`` sync adapter that stores tiddlers according to their hierarchical names into folders and subfolders.\n"},"$:/plugins/TheDiveO/ThirdFlow/icon":{"created":"20140902083115519","modified":"20140902083155746","title":"$:/plugins/TheDiveO/ThirdFlow/icon","type":"text/vnd.tiddlywiki","text":"<svg width=\"22pt\" height=\"22pt\" viewBox=\"0 0 128 128\">\n    <g fill-rule=\"evenodd\">\n    <path\n       d=\"M 13.6875,0.21875 1.96875,7 l 0,13.53125 11.71875,6.78125 11.75,-6.78125 0,-13.53125 -11.75,-6.78125 z m -0.21875,2.9375 -0.21875,0.3125 -0.1875,0.21875 0.1875,0.25 0.15625,0.25 C 8.2238491,4.3516565 4.0625,8.5897663 4.0625,13.8125 c 0,1.53048 0.3643003,2.966927 1,4.25 l -0.25,0.53125 -0.625,-0.0625 C 3.4739437,17.106473 3.0625,15.512243 3.0625,13.8125 3.0625,8.028588 7.716283,3.2895221 13.46875,3.15625 z M 14.4375,3.1875 c 5.534617,0.369785 9.90625,4.9983374 9.90625,10.625 0,1.833581 -0.463357,3.557017 -1.28125,5.0625 l -0.125,-0.25 -0.125,-0.28125 -0.28125,0.03125 -0.34375,0.03125 c 0.739688,-1.363949 1.15625,-2.929057 1.15625,-4.59375 0,-5.0803341 -3.922604,-9.2511654 -8.90625,-9.625 l -0.375,-0.5 0.375,-0.5 z M 10.25,7.5 c 1.425042,0 2.639576,0.7576324 3.8125,1.40625 1.172923,0.6486176 2.283798,1.21875 3.09375,1.21875 C 19.100721,10.125 20,9.09375 20,9.09375 L 21.25,10.25 c 0,0 -1.500142,1.5625 -4.09375,1.5625 -1.459089,0 -2.728987,-0.755233 -3.90625,-1.40625 -1.177263,-0.6510172 -2.253123,-1.1875 -3,-1.1875 -1.8328368,0 -2.875,1.03125 -2.875,1.03125 L 6.1875,9.0625 c 0,0 1.5514984,-1.5625 4.0625,-1.5625 z m 0.0625,4.6875 c 1.28542,0 2.513683,0.725888 3.6875,1.375 1.173817,0.649112 2.306403,1.21875 3.25,1.21875 2.078117,0 3.09375,-1.125 3.09375,-1.125 l 0.71875,0.65625 c 0,0 -1.352537,1.46875 -3.8125,1.46875 -1.325443,0 -2.573631,-0.724477 -3.75,-1.375 -1.176369,-0.650523 -2.301,-1.21875 -3.1875,-1.21875 -1.9724586,0 -3.09375,1.15625 -3.09375,1.15625 L 6.5,13.625 c 0,0 1.4411209,-1.4375 3.8125,-1.4375 z m 0,3.84375 c 1.28542,0 2.482432,0.694638 3.65625,1.34375 1.173817,0.649112 2.306403,1.25 3.25,1.25 2.078118,0 3.09375,-1.15625 3.09375,-1.15625 l 0.75,0.6875 c 0,0 -1.383787,1.46875 -3.84375,1.46875 -1.325443,0 -2.54238,-0.724477 -3.71875,-1.375 -1.176369,-0.650523 -2.301001,-1.21875 -3.1875,-1.21875 -1.9724586,0 -3.125,1.125 -3.125,1.125 L 6.5,17.46875 c 0,0 1.4411209,-1.4375 3.8125,-1.4375 z M 5.53125,18.875 c 1.7052086,2.730869 4.727356,4.5625 8.1875,4.5625 3.288587,0 6.171115,-1.649342 7.90625,-4.15625 l 0.6875,-0.09375 0.25,0.53125 c -1.906345,2.846287 -5.161209,4.71875 -8.84375,4.71875 -3.8226661,0 -7.1815039,-2.032459 -9.0625,-5.0625 L 5,19.40625 5.3125,19.4375 5.40625,19.15625 5.53125,18.875 z\"\n       transform=\"scale(4.6545455,4.6545455)\"\n       id=\"path4245\"\n       style=\"fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-width:0.80000001;marker:none;visibility:visible;display:inline;overflow:visible;enable-background:accumulate\" />\n    </g>\n</svg>"},"$:/plugins/TheDiveO/ThirdFlow/images/down-arrow-filled":{"created":"20141018212934861","modified":"20141018213600106","title":"$:/plugins/TheDiveO/ThirdFlow/images/down-arrow-filled","type":"text/vnd.tiddlywiki","text":"<svg class=\"tc-image-down-arrow-filled tc-image-button\" viewBox=\"0 0 22 22\" width=\"22\" height=\"22\"><path d=\"M 19.518782,6.1964562 1.9928658,6.2499507 c -0.5997449,0 -1.18824709,0.3502163 -1.4652964,0.8821413 -0.2770493,0.5319251 -0.2299991,1.2172585 0.117149,1.7063017 L 9.4346393,21.160505 c 0.6037607,0.846248 2.0655717,0.846248 2.6693317,0 L 20.839966,8.7844678 C 21.529101,7.8136291 20.709281,6.2075002 19.518782,6.1960248 z\"/></svg>\r\n"},"$:/plugins/TheDiveO/ThirdFlow/images/up-arrow-filled":{"created":"20141018213823637","modified":"20141018213933115","title":"$:/plugins/TheDiveO/ThirdFlow/images/up-arrow-filled","type":"text/vnd.tiddlywiki","text":"<svg class=\"tc-image-down-arrow-filled tc-image-button\" viewBox=\"0 0 22 22\" width=\"22\" height=\"22\"><path d=\"m 19.615415,16.125653 -17.5259167,-0.0535 c -0.5997449,0 -1.18824709,-0.350216 -1.4652964,-0.882141 C 0.3471526,14.658087 0.3942028,13.972753 0.7413509,13.48371 L 9.5312718,1.1616039 c 0.6037612,-0.84624798 2.0655722,-0.84624798 2.6693322,0 l 8.735995,12.3760371 c 0.689135,0.970839 -0.130685,2.576968 -1.321184,2.588443 z\"/></svg>\r\n"},"$:/plugins/TheDiveO/ThirdFlow/license":{"created":"20140902084022063","modified":"20140902090843205","title":"$:/plugins/TheDiveO/ThirdFlow/license","type":"text/vnd.tiddlywiki","text":"The //Third Flow// plugin is covered by the following licenses:\n\n* The ''Third Flow plugin'' is licensed under the [[MIT license|http://opensource.org/licenses/MIT]].\n* The ''hierarchical file system adapter'' is licensed under the [[TiddlyWiki 5 license|https://raw.githubusercontent.com/Jermolene/TiddlyWiki5/master/licenses/copyright.md]] (links to ~GitHub TW5 repository). It bases on ``plugins/tiddlywiki/filesystem/filesystemadaptor.js`` and brings in storing tiddlers into hierarchical folder structures according to their titles.\n* Other content of this ~TiddlyWiki which is not part of the plugin or ~TiddlyWiki 5 is covered by the [[CC BY 3.0|http://creativecommons.org/licenses/by/3.0/]] license."},"$:/plugins/TheDiveO/ThirdFlow/macros/hashify.js":{"text":"/*\\\ncreated: 20141020111828333\ntitle: $:/plugins/TheDiveO/ThirdFlow/macros/hashify.js\ntype: application/javascript\nmodified: 20141020111837899\nmodule-type: macro\n\nMacro to hash a tiddler title into a (mostly) unique number.\nThis avoids problems when using titles (from tags, et cetera)\nas path elements of a system tiddler title.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"hashify\";\n\nexports.params = [\n\t{name: \"title\"},\n    {name: \"prefix\"}\n];\n\n/*\nRun the macro\n*/\nexports.run = function(title,prefix) {\n\treturn (prefix || \"\") + $tw.utils.hashString(title);\n};\n\n})();\n","created":"20141020111828333","title":"$:/plugins/TheDiveO/ThirdFlow/macros/hashify.js","type":"application/javascript","modified":"20141020111837899","module-type":"macro"},"$:/plugins/TheDiveO/ThirdFlow/macros/sanitizedfoldername.js":{"text":"/*\\\ncreated: 20141020111845057\ntitle: $:/plugins/TheDiveO/ThirdFlow/macros/sanitizedfoldername.js\ntype: application/javascript\nmodified: 20141020111852925\nmodule-type: macro\n\nMacro to sanitize a tiddler title for use as, e.g. a folder name.\nAlso converts the title to lowercase.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\n/*\nInformation about this macro\n*/\n\nexports.name = \"sanitizedfoldername\";\n\nexports.params = [\n\t{name: \"title\"}\n];\n\n/*\nRun the macro\n*/\nexports.run = function(title) {\n\treturn title.replace(/\\<|\\>|\\:|\\\"|\\/|\\\\|\\||\\?|\\*|\\^/g,\"_\").toLowerCase();\n};\n\n})();\n","created":"20141020111845057","title":"$:/plugins/TheDiveO/ThirdFlow/macros/sanitizedfoldername.js","type":"application/javascript","modified":"20141020111852925","module-type":"macro"},"$:/plugins/TheDiveO/ThirdFlow/readme":{"created":"20140902083641711","modified":"20141020083728826","title":"$:/plugins/TheDiveO/ThirdFlow/readme","type":"text/vnd.tiddlywiki","text":"Use the //Third Flow// plugin in your Node.js-based ~TiddlyWikis to develop your customization plugins inside ~TiddlyWiki but with support for well-structured source code repository layouts.\n\nThe //Third Flow// plugin supports your plugin development in that it organizes all your tiddler source files into a clear hierarchical folder structure based on tiddler titles. An additional plugin creation command module makes it easy to create the package plugin itself as well as a demonstration ~TiddlyWiki without the hassle of having to maintain separate and even multiple ``tiddlers/`` and ``plugin/`` folders. Also, the //Third Flow// relieves you from shuffling tiddler source code files around in your source code repository.\n\nThere's only a ''single'' tiddler source code tree and it is synchronized to your tiddler's title-based structure. Thus, no more need for external editing sessions and source file shuffling.\n\nSimply install this plugin into your ~TiddlyWiki in which you are developing your customizations. For more information, please go to the [[Third Flow project website|http://thediveo.github.io/ThirdFlow]].\n\nYou can use the new [[File Storage|$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage]] control panel tab to configure how your tiddlers get organized into folders and subfolders in your source code repository.\n\nEnjoy the //Third Flow//!"},"$:/plugins/TheDiveO/ThirdFlow/styles/codemirror/tw5":{"created":"20141003153100991","modified":"20141003164807749","tags":"$:/tags/Stylesheet","title":"$:/plugins/TheDiveO/ThirdFlow/styles/codemirror/tw5","type":"text/css","text":"/* This CodeMirror stylesheet implements a TW5-compatible syntax coloring theme */\n\n.cm-s-tw5 span.cm-meta {color: #FF1717;}\r\n.cm-s-tw5 span.cm-keyword { line-height: 1em; font-weight: bold; color: #333; }\r\n.cm-s-tw5 span.cm-atom {color: #219;}\r\n.cm-s-tw5 span.cm-number {color: #008080;}\r\n.cm-s-tw5 span.cm-def {color: #00f;}\r\n.cm-s-tw5 span.cm-variable {color: black;}\r\n.cm-s-tw5 span.cm-variable-2 {color: #0000C0;}\r\n.cm-s-tw5 span.cm-variable-3 {color: #0000C0;}\r\n.cm-s-tw5 span.cm-property {color: #065252;}\r\n.cm-s-tw5 span.cm-operator {color: black;}\r\n.cm-s-tw5 span.cm-comment {color: #998;}\r\n.cm-s-tw5 span.cm-string {color: #2A00FF;}\r\n.cm-s-tw5 span.cm-string-2 {color: #f50;}\r\n.cm-s-tw5 span.cm-qualifier {color: #555;}\r\n.cm-s-tw5 span.cm-builtin {color: #30a;}\r\n.cm-s-tw5 span.cm-bracket {color: #cc7;}\r\n.cm-s-tw5 span.cm-tag {color: #000080; font-weight: bold;}\r\n.cm-s-tw5 span.cm-attribute {color: #00c;}\r\n.cm-s-tw5 span.cm-link {color: #219;}\r\n.cm-s-tw5 span.cm-error {color: #f00;}\n\n.cm-s-tw5 span.cm-underlined { text-decoration: underline; }\r\n.cm-s-tw5 span.cm-strikethrough { text-decoration: line-through; }\r\n.cm-s-tw5 span.cm-brace { color: #170; font-weight: bold; }\r\n.cm-s-tw5 span.cm-table { color: blue; font-weight: bold; }\n\n.cm-s-tw5 .CodeMirror-activeline-background {background: #F0F3F7 !important;}\r\n.cm-s-tw5 .CodeMirror-matchingbracket {outline:1px solid #c00; color:black !important;}\r\n"},"$:/plugins/TheDiveO/ThirdFlow/styles/highlight/tw5":{"created":"20141003155429576","modified":"20141003164730907","tags":"$:/tags/Stylesheet","title":"$:/plugins/TheDiveO/ThirdFlow/styles/highlight/tw5","type":"text/css","text":"/*\n\ngithub.com style (c) Vasily Polovnyov <vast@whiteants.net>\n\n*/\n\n.hljs {\r\n  display: block;\r\n  overflow-x: auto;\r\n  padding: 0.5em;\r\n  color: #333;\r\n  background: #f8f8f8;\r\n  -webkit-text-size-adjust: none;\r\n}\n\n.hljs-comment,\r\n.hljs-template_comment,\r\n.diff .hljs-header,\r\n.hljs-javadoc {\r\n  color: #998;\r\n  font-style: italic;\r\n}\n\n.hljs-keyword,\r\n.css .rule .hljs-keyword,\r\n.hljs-winutils,\r\n.javascript .hljs-title,\r\n.nginx .hljs-title,\r\n.hljs-subst,\r\n.hljs-request,\r\n.hljs-status {\r\n  color: #333;\r\n  font-weight: bold;\r\n}\n\n.hljs-number,\r\n.hljs-hexcolor,\r\n.ruby .hljs-constant {\r\n  color: #008080;\r\n}\n\n.hljs-string,\r\n.hljs-tag .hljs-value,\r\n.hljs-phpdoc,\r\n.hljs-dartdoc,\r\n.tex .hljs-formula {\r\n  color: #d14;\r\n}\n\n.hljs-title,\r\n.hljs-id,\r\n.scss .hljs-preprocessor {\r\n  color: #900;\r\n  font-weight: bold;\r\n}\n\n.javascript .hljs-title,\r\n.hljs-list .hljs-keyword,\r\n.hljs-subst {\r\n  font-weight: normal;\r\n}\n\n.hljs-class .hljs-title,\r\n.hljs-type,\r\n.vhdl .hljs-literal,\r\n.tex .hljs-command {\r\n  color: #458;\r\n  font-weight: bold;\r\n}\n\n.hljs-tag,\r\n.hljs-tag .hljs-title,\r\n.hljs-rules .hljs-property,\r\n.django .hljs-tag .hljs-keyword {\r\n  color: #000080;\r\n  font-weight: normal;\r\n}\n\n.hljs-attribute,\r\n.hljs-variable,\r\n.lisp .hljs-body {\r\n  color: #065252;\r\n}\n\n.hljs-regexp {\r\n  color: #009926;\r\n}\n\n.hljs-symbol,\r\n.ruby .hljs-symbol .hljs-string,\r\n.lisp .hljs-keyword,\r\n.clojure .hljs-keyword,\r\n.scheme .hljs-keyword,\r\n.tex .hljs-special,\r\n.hljs-prompt {\r\n  color: #990073;\r\n}\n\n.hljs-built_in {\r\n  color: #0086b3;\r\n}\n\n.hljs-preprocessor,\r\n.hljs-pragma,\r\n.hljs-pi,\r\n.hljs-doctype,\r\n.hljs-shebang,\r\n.hljs-cdata {\r\n  color: #999;\r\n  font-weight: bold;\r\n}\n\n.hljs-deletion {\r\n  background: #fdd;\r\n}\n\n.hljs-addition {\r\n  background: #dfd;\r\n}\n\n.diff .hljs-change {\r\n  background: #0086b3;\r\n}\n\n.hljs-chunk {\r\n  color: #aaa;\r\n}\r\n"},"$:/plugins/TheDiveO/ThirdFlow/syncadapters/hierarchicalfilesystemadaptor.js":{"text":"/*\\\r\ncreated: 20141015190317579\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/syncadapters/hierarchicalfilesystemadaptor.js\r\ntype: application/javascript\r\nmodified: 20141015190324904\r\nmodule-type: syncadaptor\r\n\r\nA sync adaptor module for synchronising with the local filesystem via node.js APIs\r\n...in contrast to filesystemadaptor.js this variant understands forward slashes \"/\"\r\nin tiddler titles and stores tiddlers appropriately in the file system by mapping\r\nthe hierarchy in the title to a (sub) directory structure.\r\n\r\nIn addition, this sync adaptor understands the concept of system tiddlers (starting\r\ntheir titles with \"$:/\") and stores them inside a \"special\" system branch.\r\n\r\nMoreover, this sync adaptor also understands the concept of draft tiddlers (based\r\non the presence of the \"draft.of\" field) and stores all draft tiddlers in a flat\r\nsingle \"drafts\" folder. The makes cleanup and (git) repository syncing easier to do.\r\n\r\nIn order to realize good modularity and to allow this sync adaptor to be enhanced\r\nat any time later in an easy manner, it supports so-called folder policy modules.\r\nThese are module tiddlers with a module-type of \"folderpolicy\". Folder policy modules\r\nneed to export a method named \"folderpolicy\". In addition, folder policy modules\r\ncan be assigned a priority value. Normally, the priority of a folder policy should\r\nbe between 199 and 1, inclusively. Priority 200 is currently used for the draft\r\ntiddler policy. Priority 0 is assigned to the default policy.\r\n\r\nThe code for this sync adaptor comes from filesystemadaptor.js and has been enhanced\r\nto support hierarchical tiddler storage as well as folder policies.\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\n// Get a reference to the file system and path tools\r\nvar fs = !$tw.browser ? require(\"fs\") : null,\r\n\tpath = !$tw.browser ? require(\"path\") : null;\r\n\r\nfunction HierarchicalFileSystemAdaptor(options) {\r\n\tvar self = this;\r\n\tthis.wiki = options.wiki;\r\n\tthis.logger = new $tw.utils.Logger(\"HierarchicalFileSystem\");\r\n\t// Create the <wiki>/tiddlers folder if it doesn't exist\r\n\t$tw.utils.createDirectory($tw.boot.wikiTiddlersPath);\r\n\t\r\n\tthis.config = {\r\n\t\tdisabled: false\r\n\t};\r\n\t\r\n\t// retrieve all folder policy modules and sort them according\r\n\t// to their priority, with higher priority values sorted towards\r\n\t// the beginning of our folder policy modules list. Policy modules\r\n\t// more to the beginning are getting an earlier chance of applying\r\n\t// their policy.\r\n\tvar fpModules = [];\r\n\tvar fpcWatching = [];\r\n\t$tw.modules.forEachModuleOfType(\"folderpolicy\", function(title, exports) {\r\n\t\t// prepare folder policy information for later sorting and calling\r\n\t\tfpModules.push({\r\n\t\t\ttitle: title, // just for logging\r\n\t\t\tpriority: options.wiki.getTiddler(title).fields.priority || 100,\r\n\t\t\tpolicy: exports.folderpolicy || function() { return false; }\r\n\t\t});\r\n\t\t// get the information to monitor for configuration changes\r\n\t\tif ( exports.watch && exports.reconfig ) {\r\n\t\t\tfpcWatching.push({\r\n\t\t\t\tfilter: self.wiki.compileFilter(exports.watch),\r\n\t\t\t\treconfig: exports.reconfig\r\n\t\t\t});\r\n\t\t}\r\n\t\t// initial configuration call\r\n\t\tif ( exports.reconfig ) {\r\n\t\t\texports.reconfig.call(self);\r\n\t\t}\r\n\t});\r\n\tthis.fpcWatching = fpcWatching;\r\n\tfpModules.sort(function(policyA, policyB) {\r\n\t\treturn policyB.priority - policyA.priority;\r\n\t});\r\n\tthis.logger.log(fpModules.length + \" folder policies active\");\r\n\tthis.policyModules = fpModules;\r\n\t\r\n\tif($tw.boot.wikiInfo.config[\"disable-hfs\"]) {\r\n\t\tthis.config.disabled = true;\r\n\t\tthis.logger.log(\"plugin disabled; no saving and deleting\");\r\n\t}\r\n}\r\n\r\nHierarchicalFileSystemAdaptor.prototype.getTiddlerInfo = function(tiddler) {\r\n\treturn {};\r\n};\r\n\r\n// Nota Bene: this needs to mirror the file extension information as established\r\n// in function $tw.boot.startup (boot.js). Otherwise, the sync adaptor will use\r\n// another encoding than expected by the boot process.\r\n$tw.config.typeInfo = {\r\n\t\"text/vnd.tiddlywiki\": {\r\n\t\tfileType: \"application/x-tiddler\",\r\n\t\textension: \".tid\"\r\n\t},\r\n\t\"image/jpeg\" : {\r\n\t\thasMetaFile: true,\r\n\t\tencoding: \"base64\"\r\n\t},\r\n\t\"image/png\" : {\r\n\t\thasMetaFile: true,\r\n\t\tencoding: \"base64\"\r\n\t}\r\n};\r\n\r\n$tw.config.typeTemplates = {\r\n\t\"application/x-tiddler\": \"$:/core/templates/tid-tiddler\",\r\n\t\"application/javascript\": \"$:/plugins/TheDiveO/ThirdFlow/templates/javascript-tiddler\"\r\n};\r\n\r\nHierarchicalFileSystemAdaptor.prototype.getTiddlerFileInfo = function(tiddler,callback) {\r\n\t// See if we've already got information about this file\r\n\tvar self = this,\r\n\t\ttitle = tiddler.fields.title,\r\n\t\tfileInfo = $tw.boot.files[title],\r\n\t\tdraftOf = tiddler.fields[\"draft.of\"];\r\n\t// Get information about how to save tiddlers of this type\r\n\tvar type = tiddler.fields.type || \"text/vnd.tiddlywiki\",\r\n\t\ttypeInfo = $tw.config.typeInfo[type];\r\n\tif(!typeInfo) {\r\n\t\ttypeInfo = $tw.config.typeInfo[\"text/vnd.tiddlywiki\"];\r\n\t}\r\n\tvar extension = typeInfo.extension || \"\";\r\n\tif(!fileInfo) {\r\n\t\t// If not, we'll need to generate it\r\n\t\tvar paf = self.generateTiddlerPathAndFilename(tiddler, title, draftOf);\r\n\t\tvar folder = $tw.boot.wikiTiddlersPath+path.sep+paf.subfolder;\r\n\t\t$tw.utils.createDirectory(folder);\r\n\t\t// Start by getting a list of the existing files in the directory\r\n\t\tfs.readdir(folder,function(err,files) {\r\n\t\t\tif(err) {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\t\t\t// Assemble the new fileInfo\r\n\t\t\tfileInfo = {};\r\n\t\t\t\r\n\t\t\tfileInfo.filepath = folder + path.sep + self.generateUniqueTiddlerFilename(paf.name,draftOf,extension,files);\r\n\t\t\tfileInfo.type = typeInfo.fileType || tiddler.fields.type;\r\n\t\t\tfileInfo.hasMetaFile = typeInfo.hasMetaFile;\r\n\t\t\t// Save the newly created fileInfo\r\n\t\t\t$tw.boot.files[title] = fileInfo;\r\n\t\t\t// Pass it to the callback\r\n\t\t\tcallback(null,fileInfo);\r\n\t\t});\r\n\t} else {\r\n\t\t// Otherwise just invoke the callback\r\n\t\tcallback(null,fileInfo);\r\n\t}\r\n};\r\n\r\nHierarchicalFileSystemAdaptor.prototype.subfoldersFromTitle = function(title) {\r\n\tvar lastSlash = title.lastIndexOf(\"/\");\r\n\tif (lastSlash<=0) {\r\n\t\treturn \"\";\r\n\t} else {\r\n\t\treturn title.substr(0,lastSlash+1);\r\n\t}\r\n};\r\n\r\nHierarchicalFileSystemAdaptor.prototype.leafFromTitle = function(title) {\r\n\tvar lastSlash = title.lastIndexOf(\"/\");\r\n\tif (lastSlash<0) {\r\n\t\treturn title;\r\n\t} else {\r\n\t\treturn title.substr(lastSlash+1);\r\n\t}\r\n};\r\n\r\nHierarchicalFileSystemAdaptor.prototype.generateTiddlerPathAndFilename = function(tiddler, title, draftOf) {\r\n\t// set up the policy method options such that if in a rare circumstance no policy\r\n\t// should fire, then we fall back to plain old flat storage in the main wiki folder.\r\n\tvar options = {\r\n\t\ttiddler: tiddler, // in: tiddler object we're trying a policy to find for\r\n\t\tdraft: !!draftOf, // in: is this a draft tiddler?\r\n\t\tsubfolder: \"\", // out: folder into which to place the tiddler file\r\n\t\tname: title // out: name of tiddler file\r\n\t};\r\n\t\r\n\t// run through our ordered list of folder policies and wait for one of them\r\n\t// to return true because its folder policy should be applied.\r\n\tfor (var i=0; i<this.policyModules.length; ++i) {\r\n\t\tif (this.policyModules[i].policy.call(this, title, options)) {\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Sanitize the filename as well as the subfolder(s) name(s)...\r\n\t// This more or less comes down to removing those characters that are illegal in\r\n\t// Windows file names. Oh, and we also hammer out any hierarchy slashes inside\r\n\t// the filename, thereby flattening it.\r\n\toptions.name = options.name.replace(/\\<|\\>|\\:|\\\"|\\/|\\\\|\\||\\?|\\*|\\^/g,\"_\");\r\n\t// For the subfolder path we are converting hierarchy slashes into the proper\r\n\t// platform-specific separators.\r\n\toptions.subfolder = options.subfolder.replace(/\\<|\\>|\\:|\\\"|\\\\|\\||\\?|\\*|\\^/g,\"_\").replace(/\\//g, path.sep);\r\n\r\n\treturn options;\r\n};\r\n\r\n/*\r\nGiven a tiddler title and an array of existing filenames, generate a new legal filename for the title, case insensitively avoiding the array of existing filenames\r\n*/\r\nHierarchicalFileSystemAdaptor.prototype.generateUniqueTiddlerFilename = function(baseFilename,draftOf,extension,existingFilenames) {\r\n\t// Truncate the filename if it is too long\r\n\tif(baseFilename.length > 200) {\r\n\t\tbaseFilename = baseFilename.substr(0,200);\r\n\t}\r\n\t// Start with the base filename plus the extension\r\n\tvar filename = baseFilename + extension,\r\n\t\tcount = 1;\r\n\t// Add a discriminator if we're clashing with an existing filename\r\n\twhile(existingFilenames.indexOf(filename) !== -1) {\r\n\t\tfilename = baseFilename + \" \" + (count++) + extension;\r\n\t}\r\n\treturn filename;\r\n};\r\n\r\n/*\r\nSave a tiddler and invoke the callback with (err,adaptorInfo,revision)\r\n*/\r\nHierarchicalFileSystemAdaptor.prototype.saveTiddler = function(tiddler,callback) {\r\n\tvar self = this;\r\n\r\n\t// Monitor for configuration changes and then trigger the folder\r\n\t// policy modules affected from configuration changes.\r\n\t$tw.utils.each(this.fpcWatching, function(watch, title, obj) {\r\n\t\tvar changes = watch.filter.call(self.wiki, function(filterCallback) {\r\n\t\t\tfilterCallback(tiddler, tiddler.fields.title);\r\n\t\t});\r\n\t\tif ( changes.length > 0 ) {\r\n\t\t\twatch.reconfig.call(self, tiddler.fields.title);\r\n\t\t}\r\n\t});\r\n\t\r\n\t// Proceed with saving the tiddler\r\n\tif(this.config.disabled) {\r\n\t\tthis.logger.log(\"saving disabled\");\r\n\t\treturn callback(null, {}, 0);\r\n\t}\r\n\t\r\n\tthis.getTiddlerFileInfo(tiddler,function(err,fileInfo) {\r\n\t\tvar template, content, encoding;\r\n\t\tfunction _finish() {\r\n\t\t\tcallback(null, {}, 0);\r\n\t\t}\r\n\t\tif(err) {\r\n\t\t\treturn callback(err);\r\n\t\t}\r\n\t\tif(fileInfo.hasMetaFile) {\r\n\t\t\t// Save the tiddler as a separate body and meta file\r\n\t\t\tvar typeInfo = $tw.config.typeInfo[fileInfo.type],\r\n\t\t\t\tencoding = typeInfo.encoding || \"base64\"; // makes sense for TW\r\n\t\t\tself.logger.log(\"saving type\", fileInfo.type, \"with meta file and encoding\", encoding);\r\n\t\t\tfs.writeFile(fileInfo.filepath,tiddler.fields.text,{encoding: encoding},function(err) {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\treturn callback(err);\r\n\t\t\t\t}\r\n\t\t\t\tcontent = self.wiki.renderTiddler(\"text/plain\",\"$:/core/templates/tiddler-metadata\",{variables: {currentTiddler: tiddler.fields.title}});\r\n\t\t\t\tfs.writeFile(fileInfo.filepath + \".meta\",content,{encoding: \"utf8\"},function (err) {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tself.logger.log(\"Saved file\",fileInfo.filepath);\r\n\t\t\t\t\t_finish();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// Save the tiddler as a self contained templated file\r\n\t\t\ttemplate = $tw.config.typeTemplates[fileInfo.type];\r\n\t\t\tcontent = self.wiki.renderTiddler(\"text/plain\",template,{variables: {currentTiddler: tiddler.fields.title}});\r\n\t\t\tfs.writeFile(fileInfo.filepath,content,{encoding: \"utf8\"},function (err) {\r\n\t\t\t\tif(err) {\r\n\t\t\t\t\treturn callback(err);\r\n\t\t\t\t}\r\n\t\t\t\tself.logger.log(\"Saved file\",fileInfo.filepath);\r\n\t\t\t\t_finish();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\n\r\n/*\r\nLoad a tiddler and invoke the callback with (err,tiddlerFields)\r\n\r\nWe don't need to implement loading for the file system adaptor, because all the tiddler files will have been loaded during the boot process.\r\n*/\r\nHierarchicalFileSystemAdaptor.prototype.loadTiddler = function(title,callback) {\r\n\tcallback(null,null);\r\n};\r\n\r\n/*\r\nDelete a tiddler and invoke the callback with (err)\r\n*/\r\nHierarchicalFileSystemAdaptor.prototype.deleteTiddler = function(title,callback,options) {\r\n\tif(this.config.disabled) {\r\n\t\tthis.logger.log(\"deleting disabled\");\r\n\t\treturn callback(null);\r\n\t}\r\n\r\n\tvar self = this,\r\n\t\tfileInfo = $tw.boot.files[title];\r\n\t// Only delete the tiddler if we have writable information for the file\r\n\tif(fileInfo) {\r\n\t\t// Delete the file\r\n\t\tfs.unlink(fileInfo.filepath,function(err) {\r\n\t\t\tif(err) {\r\n\t\t\t\treturn callback(err);\r\n\t\t\t}\r\n\t\t\tself.logger.log(\"Deleted file\",fileInfo.filepath);\r\n\t\t\t// Delete the metafile if present\r\n\t\t\tif(fileInfo.hasMetaFile) {\r\n\t\t\t\tfs.unlink(fileInfo.filepath + \".meta\",function(err) {\r\n\t\t\t\t\tif(err) {\r\n\t\t\t\t\t\treturn callback(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete $tw.boot.files[title];\r\n\t\t\t\t\tcallback(null);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tdelete $tw.boot.files[title];\r\n\t\t\t\tcallback(null);\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tcallback(null);\r\n\t}\r\n};\r\n\r\nif(fs) {\r\n\texports.adaptorClass = HierarchicalFileSystemAdaptor;\r\n}\r\n\r\n})();\r\n","created":"20141015190317579","title":"$:/plugins/TheDiveO/ThirdFlow/syncadapters/hierarchicalfilesystemadaptor.js","type":"application/javascript","modified":"20141015190324904","module-type":"syncadaptor"},"$:/plugins/TheDiveO/ThirdFlow/templates/javascript-tiddler":{"created":"20140927173431490","modified":"20140927173434365","title":"$:/plugins/TheDiveO/ThirdFlow/templates/javascript-tiddler","type":"text/vnd.tiddlywiki","text":"<$metafy/>"},"$:/plugins/TheDiveO/ThirdFlow/templates/save-all-wo-plugin-sources":{"created":"20140902113827798","modified":"20140927173615299","title":"$:/plugins/TheDiveO/ThirdFlow/templates/save-all-wo-plugin-sources","type":"text/vnd.tiddlywiki","text":"\\define saveTiddlerFilter()\r\n[is[tiddler]] -[prefix[$:/state/popup/]] -[[$:/HistoryList]] -[[$:/boot/boot.css]] -[type[application/javascript]library[yes]] -[[$:/boot/boot.js]] -[[$:/boot/bootprefix.js]] -[prefix[$:/temp/]] -[is[shadowinsync]] -[[$:/plugins/TheDiveO/ThirdFlow/readme]is[shadow]!is[tiddler]removesuffix[/readme]] -[prefix[$:/plugins/TheDiveO/BrokenPlugin]] +[sort[title]]\r\n\\end\r\n{{$:/core/templates/tiddlywiki5.html}}\r\n"},"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage/Basic":{"caption":"Basic","created":"20141013144648552","modified":"20141013190842095","tags":"$:/tags/HFS/ControlPanel","title":"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage/Basic","type":"text/vnd.tiddlywiki","text":"|Folder for system tiddlers:|<$edit-text tiddler=\"$:/config/FileStorage/systemfoldername\" default=\"system\" tag=\"input\"/>|\r\n|Folder for draft tiddlers:|<$edit-text tiddler=\"$:/config/FileStorage/draftfoldername\" default=\"drafts\" tag=\"input\"/>|\n\n!! How to store ordinary tiddlers into (sub) folders\n\n<$radio tiddler=\"$:/config/FileStorage/enableautomaticsubfolders\" value=\"yes\"> Organize ordinary tiddlers into hierarchical subfolders.</$radio>\n\n<$radio tiddler=\"$:/config/FileStorage/enableautomaticsubfolders\" value=\"no\"> Store ordinary tiddlers ''flat'' in the top-level wiki folder.</$radio>"},"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage/Tags":{"caption":"Tag-based Folders","created":"20141013152809952","modified":"20141021155458219","tags":"$:/tags/HFS/ControlPanel","title":"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage/Tags","type":"text/vnd.tiddlywiki","text":"\\define config-tiddler() $:/config/FileStorage/tagfolders\n\n\\define config-tiddler-list() [list[$(config-tiddler)$]]\n\n\\define tag-styles()\nbackground-color:$(backgroundColor)$;\n\\end\n\n\\define config-defaults() {\"tag-name\": \"$(currentListElement)$\", \"folder-name\": \"$(folder)$\", \"folder-mode\": \"flat\"}\n\n\\define tag-folder-editor()\n  <$set name=\"tagConfigTiddler\" value=<<hashify title:\"$(currentListElement)$\" prefix:\"$(config-tiddler)$/config-\">>>\n  <$set name=\"folder\" value=<<sanitizedfoldername \"$(currentListElement)$\">>>\n    <$list filter=\"[<tagConfigTiddler>is[missing]]\">\n      <$ensuretiddler title=<<tagConfigTiddler>> default=<<config-defaults>>/>\n      <$link title=<<currentTiddler>> format=\"text\"><$text text=<<currentTiddler>>/></$link>\n    </$list>\n    <tr class=\"tc-edit-field\">\n      <td class=\"tc-edit-tag-name\">\n      \t<$link to=<<currentListElement>>>\n          <$set name=\"backgroundColor\" value={{$(currentListElement)$!!color}}>\n            <span style=<<tag-styles>> class=\"tc-tag-label\">\n              <$text text=<<currentListElement>> format=\"text\"/>\n            </span>\n          </$set>\n        </$link>\n      </td>\n\n      <td class=\"tc-edit-tag-folder\">\n        <$edit-text tiddler=<<tagConfigTiddler>> field=\"folder-name\" placeholder=\"enter a folder name\"/>\n      </td>\n\n      <td class=\"tc-edit-tag-flat\">\n        <$select tiddler=<<tagConfigTiddler>> field=\"folder-mode\">\n            <option value=\"flat\">flat</option>\n            <option value=\"subfolders\">subfolders</option>\n        </$select>\n      </td>\n\n      <td class=\"tc-edit-tag-ops\">\n        <$button message=\"tm-shift-back-list-element\" param=<<currentListElement>> class=\"tc-btn-invisible\">{{$:/plugins/TheDiveO/ThirdFlow/images/up-arrow-filled}}</$button>\n        &nbsp;\n        <$button message=\"tm-shift-forward-list-element\" param=<<currentListElement>> class=\"tc-btn-invisible\">{{$:/plugins/TheDiveO/ThirdFlow/images/down-arrow-filled}}</$button>\n        &nbsp;\n        <$button message=\"tm-remove-list-element\" param=<<currentListElement>> class=\"tc-btn-invisible\">{{$:/core/images/delete-button}}</$button>\n      </td>\n    </tr>\n  </$set>\n  </$set>\n\\end\n\nTags towards the beginning of the list take priority over later tags.\n\n<$listmangler tiddler=<<config-tiddler>>>\n\n<div class=\"tc-edit-fields\">\n  <table class=\"tc-edit-fields\">\n  \t<thead>\n      <tr>\n        <td>tag</td>\n        <td>folder</td>\n        <td>storage</td>\n        <td>priority</td>\n      </tr>\n    </thead>\n    <tbody>\n      <$list filter=<<config-tiddler-list>> variable=\"currentListElement\">\n        <<tag-folder-editor>>\n      </$list>\n    </tbody>\n  </table>\n</div>\n\n<div class=\"tc-edit-field-add\">\n  <em class=\"tc-edit\">Add a new tag folder:</em>\n\n  <div class=\"tc-edit-add-tag\">\n    <span class=\"tc-add-tag-name\">\n      <$edit-text tiddler=\"$:/temp/NewTagName\" tag=\"input\" default=\"\" placeholder=\"tag name\" focusPopup=<<qualify \"$:/state/popup/tags-auto-complete\">> class=\"tc-edit-texteditor\"/>\n    </span>\n    \n    <$button popup=<<qualify \"$:/state/popup/tags-auto-complete\">> class=\"tc-btn-invisible tc-btn-dropdown\">\n      {{$:/core/images/down-arrow}}\n    </$button>\n    \n    <span class=\"tc-add-tag-button\">\n      <$button message=\"tm-add-list-element\" param={{$:/temp/NewTagName}} set=\"$:/temp/NewTagName\" setTo=\"\" class=\"\">\n        add\n      </$button>\n    </span>\n  </div>\n</div>\n\n<div class=\"tc-block-dropdown-wrapper\">\n  <$reveal state=<<qualify \"$:/state/popup/tags-auto-complete\">> type=\"nomatch\" text=\"\" default=\"\">\n    <div class=\"tc-block-dropdown\">\n      <$linkcatcher set=\"$:/temp/NewTagName\" setTo=\"\" message=\"tm-add-list-element\">\n        <$list filter=\"[!is[shadow]tags[]search{$:/temp/NewTagName}sort[title]]\">\n          <$link>\n            <$set name=\"backgroundColor\" value={{!!color}}>\n              <span style=<<tag-styles>> class=\"tc-tag-label\">\n                <$view field=\"title\" format=\"text\"/>\n              </span>\n            </$set>\n          </$link>\n        </$list>\n      </$linkcatcher>\n    </div>\n  </$reveal>\n</div>\n\n</$listmangler>"},"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage":{"caption":"File Storage","created":"20141013143730660","modified":"20141018205151892","tags":"$:/tags/ControlPanel","title":"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage","type":"text/vnd.tiddlywiki","text":"Setup how a Node.js-server TiddlyWiki organizes your tiddlers into hierarchical folders and subfolders. Any configuration changes you make here will immediately become live, even on your TiddlyWiki server.\r\n<div class=\"tc-control-panel\">\r\n<<tabs \"[all[shadows+tiddlers]tag[$:/tags/HFS/ControlPanel]!has[draft.of]]\" \"$:/plugins/TheDiveO/ThirdFlow/ui/ControlPanel/FileStorage/Basic\">>\r\n</div>"},"$:/plugins/TheDiveO/ThirdFlow/ui/MoreSideBar/PluginSources":{"caption":"Plugin Sources","created":"20141003192047443","modified":"20141005205418407","tags":"$:/tags/MoreSideBar","title":"$:/plugins/TheDiveO/ThirdFlow/ui/MoreSideBar/PluginSources","type":"text/vnd.tiddlywiki","text":"\\define plugin-full-path() $:/plugins/$(plugin-name)$\n\n\\define plugin-icon() $:/plugins/$(plugin-name)$/icon\n\n\\define plugin-type-filter() [{$:/plugins/$(plugin-name)$!!plugin-type}]\n\n\\define plugin-default-icon() $:/core/images/plugin-generic-$(plugin-type)$\n\n\\define plugin-contents-filter() [prefix[$:/plugins/$(plugin-name)$]!is[shadow]]\n\n\\define plugin-item-relname() [is[current]removeprefix[$:/plugins/$(plugin-name)$/]!prefix[tiddlywiki/]]\n\n\\define plugin-item()\r\n<div class=\"tc-menu-list-subitem\">\r\n  <$link to={{!!title}}>\r\n    <$list filter=<<plugin-item-relname>> >\r\n      ...<$view field=\"title\" format=\"text\" />\r\n    </$list>\r\n  </$link>\r\n</div>\r\n\\end\n\n<div class=\"tc-timeline\">\r\n  <$list filter=\"[prefix[$:/plugins/]has[plugin-type]removeprefix[$:/plugins/]!prefix[tiddlywiki/]]\" variable=\"plugin-name\">\r\n    <div class=\"tc-menu-list-item\">\r\n    \r\n      <div class=\"tc-plugin-info-chunk\">\r\n        <$transclude tiddler=<<plugin-icon>> >\r\n          <$list filter=<<plugin-type-filter>> variable=\"plugin-type\">\r\n            <$transclude tiddler=<<plugin-default-icon>> />\r\n          </$list>\r\n        </$transclude>\r\n        \r\n      </div>\r\n      <$link to=<<plugin-full-path>>>\r\n        <$macrocall $name=\"plugin-name\" $output=\"text/plain\" />\r\n      </$link>\r\n      \r\n      <$list filter=<<plugin-contents-filter>> >\r\n        <<plugin-item>>\r\n      </$list>\r\n      \r\n    </div>\r\n  </$list>\r\n</div>"},"$:/plugins/TheDiveO/ThirdFlow/widgets/ensuretiddler.js":{"text":"/*\\\ncreated: 20141020111918405\ntitle: $:/plugins/TheDiveO/ThirdFlow/widgets/ensuretiddler.js\ntype: application/javascript\nmodified: 20141020111927394\nmodule-type: widget\n\nDefault widget: if a particular tiddler is not present,\nthen it gets created using the default values specified.\nIn contrast to the new tiddler creation message, we don't\nuse a static template but instead accept the default values\nin form of a JSON string that may be the result of some\nmacro invokation.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\nvar EnsureTiddlerWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n};\n\n/*\nInherit from the base widget class\n*/\nEnsureTiddlerWidget.prototype = new Widget();\n\n/*\nRender this widget into the DOM\n*/\nEnsureTiddlerWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tthis.renderChildren(parent,nextSibling);\n};\n\n/*\nCompute the internal state of the widget\n*/\nEnsureTiddlerWidget.prototype.execute = function() {\n\t// Get our parameters\n\tthis.ensureTitle = this.getAttribute(\"title\",\"currentTiddler\");\n\tthis.ensureDefault = this.getAttribute(\"default\");\n\n    var tiddler = this.wiki.getTiddler(this.ensureTitle);\n    if(!tiddler) {\n        var defaults;\n        try {\n            defaults = JSON.parse(this.ensureDefault);\n        } catch(ex) {\n            defaults = {};\n        }\n        defaults[\"title\"] = this.ensureTitle;\n        var mods = this.wiki.getModificationFields();\n        this.wiki.addTiddler(new $tw.Tiddler(defaults,mods));\n    }\n    \n    // Construct the child widgets\n\tthis.makeChildWidgets();\n};\n\n/*\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\n*/\nEnsureTiddlerWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.title || changedAttributes.default) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn this.refreshChildren(changedTiddlers);\t\t\n\t}\n};\n\nexports.ensuretiddler = EnsureTiddlerWidget;\n\n})();\n","created":"20141020111918405","title":"$:/plugins/TheDiveO/ThirdFlow/widgets/ensuretiddler.js","type":"application/javascript","modified":"20141020111927394","module-type":"widget"},"$:/plugins/TheDiveO/ThirdFlow/widgets/jsonmangler.js":{"text":"/*\\\r\ncreated: 20141015190230115\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/widgets/jsonmangler.js\r\ntype: application/javascript\r\nmodified: 20141015190236275\r\nmodule-type: widget\r\n\r\nThe JSON mangler widget -- similar to the fieldmangler widget,\r\nbut for mangling JSON data in a data tiddler instead of\r\nmangling the fields of a tiddler.\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\r\n\r\n// The JSON mangler widget understands the following events:\r\n// * tm-add-json-index: add a new index to a JSON data tiddler, the\r\n//   index name to add is in the event param parameter.\r\n// * tm-remove-json-index: remove an existing index from a JSON data\r\n//   tiddler, as specified in the event param parameter.\r\nvar JsonManglerWidget = function(parseTreeNode,options) {\r\n\tthis.initialise(parseTreeNode,options);\r\n\tthis.addEventListeners([\r\n\t\t{type: \"tm-add-json-index\", handler: \"handleAddJsonIndexEvent\"},\r\n\t\t{type: \"tm-remove-json-index\", handler: \"handleRemoveJsonIndexEvent\"}\r\n\t]);\r\n};\r\n\r\n// Inherit from the base widget class\r\nJsonManglerWidget.prototype = new Widget();\r\n\r\n// Render this widget into the DOM\r\nJsonManglerWidget.prototype.render = function(parent,nextSibling) {\r\n\tthis.parentDomNode = parent;\r\n\tthis.computeAttributes();\r\n\tthis.execute();\r\n\tthis.renderChildren(parent,nextSibling);\r\n};\r\n\r\n\r\n// Compute the internal state of the widget\r\nJsonManglerWidget.prototype.execute = function() {\r\n\t// Get our parameters\r\n\tthis.mangleTitle = this.getAttribute(\"tiddler\",this.getVariable(\"currentTiddler\"));\r\n\t// Construct the child widgets\r\n\tthis.makeChildWidgets();\r\n};\r\n\r\n// Selectively refreshes the widget if needed. Returns true if the widget\r\n// or any of its children needed re-rendering\r\nJsonManglerWidget.prototype.refresh = function(changedTiddlers) {\r\n\tvar changedAttributes = this.computeAttributes();\r\n\tif(changedAttributes.tiddler) {\r\n\t\tthis.refreshSelf();\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn this.refreshChildren(changedTiddlers);\t\t\r\n\t}\r\n};\r\n\r\n// Add a new index (as specified in the event param parameter) to a JSON\r\n// data tiddler (specified in the widget title parameter). It is also possible\r\n// to specify a default value; the event param parameter then needs to be a hashmap\r\n// with the elements \"index\" (name of index) and \"default\" (default value).\r\nJsonManglerWidget.prototype.handleAddJsonIndexEvent = function(event) {\r\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle);\r\n\tvar index = (typeof event.param === \"string\") ? event.param : event.param[\"index\"];\r\n\tvar def = (typeof event.param === \"string\") ? \"\" : event.param[\"default\"];\r\n\tif ( index ) {\r\n\t\tvar data = tiddler ? this.wiki.getTiddlerData(tiddler, {}) : {};\r\n\t\tdata[index] = \"\";\r\n\t\tthis.wiki.setTiddlerData(this.mangleTitle, data, tiddler);\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n// Remove an existing index (as specified in the event param parameter) from a JSON\r\n// data tiddler (specified in the widget title parameter).\r\nJsonManglerWidget.prototype.handleRemoveJsonIndexEvent = function(event) {\r\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle);\r\n\tvar index = (typeof event.param === \"string\") ? event.param : event.param[\"index\"];\r\n\tif ( tiddler && index ) {\r\n\t\tvar data = this.wiki.getTiddlerData(tiddler, {});\r\n\t\tdelete data[index];\r\n\t\tthis.wiki.setTiddlerData(this.mangleTitle, data, tiddler);\r\n\t}\r\n\treturn true;\r\n};\r\n\r\nexports.jsonmangler = JsonManglerWidget;\r\n\r\n})();\r\n","created":"20141015190230115","title":"$:/plugins/TheDiveO/ThirdFlow/widgets/jsonmangler.js","type":"application/javascript","modified":"20141015190236275","module-type":"widget"},"$:/plugins/TheDiveO/ThirdFlow/widgets/listmangler.js":{"text":"/*\\\ncreated: 20141020111936183\ntitle: $:/plugins/TheDiveO/ThirdFlow/widgets/listmangler.js\ntype: application/javascript\nmodified: 20141020111942403\nmodule-type: widget\n\nThe list mangler widget -- mangles the list field of a\ntiddler. It supports the following parameters:\n* tiddler: the tiddler to work on, default is currentTiddler.\n* field: the field to mangle as a list, default is the list field.\n\n\\*/\n(function(){\n\n/*jslint node: true, browser: true */\n/*global $tw: false */\n\"use strict\";\n\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\n\n// The list mangler widget understands the following events:\n// * tm-add-list-element\n// * tm-remove-list-element\n// * tm-back-list-element\n// * tm-forward-list-element\nvar ListManglerWidget = function(parseTreeNode,options) {\n\tthis.initialise(parseTreeNode,options);\n\tthis.addEventListeners([\n\t\t{type: \"tm-add-list-element\", handler: \"handleAddListElementEvent\"},\n\t\t{type: \"tm-remove-list-element\", handler: \"handleRemoveListElementEvent\"},\n\t\t{type: \"tm-shift-forward-list-element\", handler: \"handleShiftForwardListElementEvent\"},\n\t\t{type: \"tm-shift-back-list-element\", handler: \"handleShiftBackListElementEvent\"}\n\t]);\n};\n\n// Inherit from the base widget class\nListManglerWidget.prototype = new Widget();\n\n// Render this widget into the DOM\nListManglerWidget.prototype.render = function(parent,nextSibling) {\n\tthis.parentDomNode = parent;\n\tthis.computeAttributes();\n\tthis.execute();\n\tthis.renderChildren(parent,nextSibling);\n};\n\n\n// Compute the internal state of the widget\nListManglerWidget.prototype.execute = function() {\n\t// Get our parameters\n\tthis.mangleTitle = this.getAttribute(\"tiddler\",this.getVariable(\"currentTiddler\"));\n    this.mangleField = this.getAttribute(\"field\",\"list\");\n\t// Construct the child widgets\n\tthis.makeChildWidgets();\n};\n\n// Selectively refreshes the widget if needed. Returns true if the widget\n// or any of its children needed re-rendering\nListManglerWidget.prototype.refresh = function(changedTiddlers) {\n\tvar changedAttributes = this.computeAttributes();\n\tif(changedAttributes.tiddler || changedAttributes.field) {\n\t\tthis.refreshSelf();\n\t\treturn true;\n\t} else {\n\t\treturn this.refreshChildren(changedTiddlers);\t\t\n\t}\n};\n\n// Appends a new element to the list field (or other anspecified field) of\n// the given tiddler. Ensures that the same element never gets added twice.\n// If the tiddler doesn't exist yet, it will be created.\nListManglerWidget.prototype.handleAddListElementEvent = function(event) {\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle) || new $tw.Tiddler({title: this.mangleTitle});\n    var addElement = event.param;\n    var list = $tw.utils.parseStringArray(tiddler.fields[this.mangleField] || \"\").slice(0);\n    var where = list.indexOf(addElement);\n    if(where<0) {\n        list.push(addElement);\n        var mods = this.wiki.getModificationFields();\n        mods[this.mangleField] = list;\n        this.wiki.addTiddler(new $tw.Tiddler(tiddler,mods));\n    }\n    return true;\n};\n\n// Removes an existing element from the list field (or another specified field)\n// of the given tiddler.\nListManglerWidget.prototype.handleRemoveListElementEvent = function(event) {\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle);\n    if(tiddler) {\n        var remElement = event.param;\n        var list = $tw.utils.parseStringArray(tiddler.fields[this.mangleField] || \"\").slice(0);\n        var where = list.indexOf(remElement);\n        if(where>=0) {\n            list.splice(where,1);\n            var mods = this.wiki.getModificationFields();\n            mods[this.mangleField] = list;\n            this.wiki.addTiddler(new $tw.Tiddler(tiddler,mods));\n        }\n    }\n    return true;\n};\n\n// Moves an existing element from the list field (or another specified field)\n// one position forward towards the end of the list of the given tiddler.\nListManglerWidget.prototype.handleShiftForwardListElementEvent = function(event) {\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle);\n    if(tiddler) {\n        var shiftElement = event.param;\n        var list = $tw.utils.parseStringArray(tiddler.fields[this.mangleField] || \"\").slice(0);\n        var where = list.indexOf(shiftElement);\n        if((where>=0) && (where<list.length-1)) {\n            var swapElement = list[where+1];\n            list.splice(where,2,swapElement,shiftElement);\n            var mods = this.wiki.getModificationFields();\n            mods[this.mangleField] = list;\n            this.wiki.addTiddler(new $tw.Tiddler(tiddler,mods));\n        }\n    }\n    return true;\n};\n\n// Moves an existing element from the list field (or another specified field)\n// one position backwards towards the beginning of the list of the given tiddler.\nListManglerWidget.prototype.handleShiftBackListElementEvent = function(event) {\n\tvar tiddler = this.wiki.getTiddler(this.mangleTitle);\n    if(tiddler) {\n        var shiftElement = event.param;\n        var list = $tw.utils.parseStringArray(tiddler.fields[this.mangleField] || \"\").slice(0);\n        var where = list.indexOf(shiftElement);\n        if(where>=1) {\n            var swapElement = list[where-1];\n            list.splice(where-1,2,shiftElement,swapElement);\n            var mods = this.wiki.getModificationFields();\n            mods[this.mangleField] = list;\n            this.wiki.addTiddler(new $tw.Tiddler(tiddler,mods));\n        }\n    }\n    return true;\n};\n\nexports.listmangler = ListManglerWidget;\n\n})();\n","created":"20141020111936183","title":"$:/plugins/TheDiveO/ThirdFlow/widgets/listmangler.js","type":"application/javascript","modified":"20141020111942403","module-type":"widget"},"$:/plugins/TheDiveO/ThirdFlow/widgets/metafy.js":{"text":"/*\\\r\ncreated: 20140927173129833\r\ntitle: $:/plugins/TheDiveO/ThirdFlow/widgets/metafy.js\r\ntype: application/javascript\r\nmodified: 20140927173153432\r\nmodule-type: widget\r\n\r\nmetafy widget\r\n\r\nUsed to dump javascript tiddlers correctly as .js files as opposed to .js.tid\r\nfiles.\r\n\r\nwidget attributes:\r\n* tiddler: defaults to the widget variable currentTiddler.\r\n* detect: regular expression detecting a meta data section (which may be\r\n    empty). Its parameter #2 indicates where to replace/insert meta data\r\n    when such a section is present. Otherwise, the template parameter will\r\n    be used instead. For instance, the following regular expression composed\r\n    of these elements:\r\n      \"(^\\/\\*\\\\(?:\\r?\\n))\"\r\n        -- the special comment marker at the section beginning on its own line.\r\n      \"((?:^[^\\r\\n]+(?:\\r?\\n))*)\"\r\n        -- matches all meta data field lines.\r\n      \"(?:(?:^[^\\r\\n]*(?:\\r?\\n))*)\"\r\n        -- matches a trailing normal comment text.\r\n      \"(?:^\\\\\\*\\/(?:\\r?\\n)?)\"\r\n        -- the special comment marker at the section end on its own line.\r\n* exclude: the fields to exclude; defaults to \"text bag revision\".\r\n* template: template to use to establish meta data section if not yet present.\r\n    $fields$ is used to indicate where to insert the fields (meta) data section of\r\n    \"field: value\\n\" pairs. For instance, \"/*\\\\\\n$fields$\\\\*\"+\"/\\n\"\r\n\r\n\\*/\r\n(function(){\r\n\r\n/*jslint node: true, browser: true */\r\n/*global $tw: false */\r\n\"use strict\";\r\n\r\nvar Widget = require(\"$:/core/modules/widgets/widget.js\").widget;\r\n\r\n/*\r\nConstructor\r\n */\r\nvar MetafyWidget = function(parseTreeNode, options) {\r\n\tthis.initialise(parseTreeNode, options);\r\n};\r\n\r\n/*\r\nInherit from the base widget class\r\n*/\r\nMetafyWidget.prototype = new Widget();\r\n\r\n/*\r\nRender this widget into the DOM\r\n*/\r\nMetafyWidget.prototype.render = function(parent, nextSibling) {\r\n\tthis.parentDomNode = parent;\r\n\tthis.computeAttributes();\r\n\tthis.execute();\r\n\tvar textNode = this.document.createTextNode(this.text);\r\n\tparent.insertBefore(textNode, nextSibling);\r\n\tthis.domNodes.push(textNode);\r\n};\r\n\r\n/*\r\nCompute the internal state of the widget\r\n*/\r\nMetafyWidget.prototype.execute = function() {\r\n\t// Get parameters from our attributes\r\n\tthis.metafyTitle = this.getAttribute(\"tiddler\", this.getVariable(\"currentTiddler\"));\r\n\tthis.metafyDetect = this.getAttribute(\"match\",\r\n\t\t  \"(^\\\\/\\\\*\\\\\\\\(?:\\\\r?\\\\n))\" // special comment marker beginning\r\n\t\t+ \"((?:^[^\\\\r\\\\n]+(?:\\\\r?\\\\n))*)\" // field name-value pairs\r\n\t\t+ \"(?:(?:^[^\\\\r\\\\n]*(?:\\\\r?\\\\n))*)\" // remaining comment section\r\n\t\t+ \"(?:^\\\\\\\\\\\\*\\\\/(?:\\\\r?\\\\n)?)\" // special comment marker end\r\n\t);\r\n\tvar exclude = this.getAttribute(\"exclude\", \"text bag revision\");\r\n\texclude = exclude.split(\" \");\r\n\tthis.metafyExclude = exclude;\r\n\tthis.metafyTemplate = this.getAttribute(\"template\", \"/*\\\\\\n$fields$\\\\*/\\n\");\r\n\t\r\n\tvar tiddler = this.wiki.getTiddler(this.metafyTitle);\r\n\tvar text = \"\";\r\n\tif (tiddler) {\r\n\t\ttext = this.wiki.getTiddlerText(this.metafyTitle);\r\n\t}\r\n\t\r\n\tvar fields = \"\";\r\n\tfor(var field in tiddler.fields) {\r\n\t\tif (exclude.indexOf(field) === -1) {\r\n\t\t\tfields += field + \": \" + tiddler.getFieldString(field) + \"\\n\";\r\n\t\t}\r\n\t}\r\n\t\r\n\tvar match = new RegExp(this.metafyDetect, \"mg\").exec(text);\r\n\tif (match) {\r\n\t\tvar start = match.index + match[1].length;\r\n\t\ttext = text.substr(0, start) + fields + text.substr(start + match[2].length);\r\n\t} else {\r\n\t\tconsole.log(\"no match\");\r\n\t\ttext = this.metafyTemplate.replace(\"$fields$\", fields) + text;\r\n\t}\r\n\t\r\n\tthis.text = text;\r\n};\r\n\r\n/*\r\nSelectively refreshes the widget if needed. Returns true if the widget or any of its children needed re-rendering\r\n*/\r\nMetafyWidget.prototype.refresh = function(changedTiddlers) {\r\n\tvar changedAttributes = this.computeAttributes();\r\n\tif(changedAttributes.tiddler || changedAttributes.detect || changedAttributes.exclude || changedAttributes.template || changedTiddlers[this.viewTitle]) {\r\n\t\tthis.refreshSelf();\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n};\r\n\r\n/*\r\nExport the metafy widget\r\n */\r\nexports.metafy = MetafyWidget;\r\n\r\n})();\r\n","created":"20140927173129833","title":"$:/plugins/TheDiveO/ThirdFlow/widgets/metafy.js","type":"application/javascript","modified":"20140927173153432","module-type":"widget"}}}